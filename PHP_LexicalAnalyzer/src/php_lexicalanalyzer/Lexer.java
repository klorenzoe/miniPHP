/* The following code was generated by JFlex 1.6.1 */

package php_lexicalanalyzer;
import static php_lexicalanalyzer.Token.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>src/php_lexicalanalyzer/Rules.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\12\0\1\75\1\75\1\75\1\75\22\0\1\1\1\12\1\45\1\13"+
    "\1\41\1\14\1\15\1\43\1\16\1\17\1\23\1\35\1\37\1\34"+
    "\1\36\1\42\12\10\1\27\1\30\1\32\1\20\1\31\1\22\5\0"+
    "\1\52\20\0\1\74\4\0\1\24\1\2\1\25\1\0\1\26\1\0"+
    "\1\46\1\7\1\62\1\47\1\54\1\6\1\70\1\61\1\57\1\11"+
    "\1\63\1\55\1\65\1\3\1\50\1\64\1\71\1\4\1\56\1\5"+
    "\1\53\1\67\1\60\1\51\1\66\1\11\1\44\1\33\1\30\1\21"+
    "\6\0\1\75\33\0\1\21\6\0\1\21\3\0\1\21\3\0\1\21"+
    "\16\0\1\21\u1f58\0\1\72\1\73\16\0\1\75\1\75\udfd3\0\1\40"+
    "\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\22\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\1\5\3\1\4\1\3\1\5"+
    "\1\6\1\7\1\1\1\10\1\11\1\12\1\13\1\7"+
    "\1\1\1\14\2\13\1\1\1\7\2\1\1\7\2\1"+
    "\17\3\30\0\1\15\1\0\1\1\12\3\1\1\3\0"+
    "\1\1\2\0\1\1\1\5\1\16\4\0\1\17\1\0"+
    "\4\17\2\0\1\20\1\0\1\20\3\3\1\16\2\3"+
    "\1\5\27\3\12\0\1\16\35\0\10\3\1\16\3\3"+
    "\1\21\2\0\1\5\2\0\2\3\4\0\1\1\1\0"+
    "\2\17\1\0\11\17\1\0\37\3\6\0\1\16\45\0"+
    "\4\3\1\22\4\3\1\1\2\3\6\0\1\5\13\17"+
    "\1\6\13\3\1\16\16\3\24\0\1\16\16\0\4\3"+
    "\1\16\1\0\2\3\4\0\1\17\2\0\2\17\1\23"+
    "\6\17\24\3\4\0\1\16\24\0\4\3\1\5\2\0"+
    "\2\3\4\0\10\17\13\3\1\16\16\0\1\3\1\16"+
    "\3\3\1\0\1\24\5\17\1\16\1\0\3\3\1\16"+
    "\2\3\1\16\1\0\1\16\4\0\1\16\3\0\1\3"+
    "\1\16\1\0\1\3\1\0\4\17\2\0\1\16\2\3"+
    "\6\0\1\3\1\16\1\3\1\0\3\17\4\0\1\3"+
    "\5\0\1\3\1\25\1\0\1\3\1\0\3\17\7\0"+
    "\2\3\1\0\3\17\7\0\1\16\1\3\1\0\3\17"+
    "\10\0\1\26\1\16\2\0\1\3\1\0\2\17\14\0"+
    "\1\3\1\0\2\17\13\0\2\17\1\0\2\26\2\0"+
    "\2\17\3\0\2\17\3\0\2\17\11\0\1\25";

  private static int [] zzUnpackAction() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\76\0\174\0\272\0\370\0\u0136\0\u0174\0\u01b2"+
    "\0\u01f0\0\u022e\0\u026c\0\u02aa\0\u02e8\0\76\0\u0326\0\76"+
    "\0\76\0\u0364\0\u03a2\0\u03e0\0\u041e\0\76\0\76\0\u045c"+
    "\0\u049a\0\u04d8\0\u0516\0\u0554\0\u0592\0\u05d0\0\u060e\0\u064c"+
    "\0\u068a\0\u06c8\0\u0706\0\u0744\0\u0782\0\u07c0\0\u07fe\0\u083c"+
    "\0\u087a\0\u08b8\0\u08f6\0\u0934\0\u0972\0\u09b0\0\174\0\u09ee"+
    "\0\u0a2c\0\u0a6a\0\u0aa8\0\u0ae6\0\u0b24\0\u03a2\0\u0b62\0\u0ba0"+
    "\0\u0bde\0\u0c1c\0\u0c5a\0\u0c98\0\u0cd6\0\u0d14\0\u0d52\0\u0d90"+
    "\0\u0dce\0\u0e0c\0\u0e4a\0\u0e88\0\u0ec6\0\u0f04\0\u0f42\0\u0f80"+
    "\0\u0fbe\0\u0ffc\0\u103a\0\u1078\0\u10b6\0\u10f4\0\u1132\0\u1170"+
    "\0\u11ae\0\u11ec\0\u122a\0\u1268\0\u12a6\0\u12e4\0\u1322\0\u1360"+
    "\0\u139e\0\u13dc\0\u141a\0\76\0\u1458\0\u1496\0\u14d4\0\u1512"+
    "\0\u1550\0\u158e\0\u15cc\0\u160a\0\u1648\0\u1686\0\u16c4\0\u1702"+
    "\0\u05d0\0\u05d0\0\u060e\0\u060e\0\u1740\0\u177e\0\u17bc\0\u17fa"+
    "\0\u1838\0\u1876\0\u026c\0\u18b4\0\u18f2\0\u1930\0\u196e\0\u19ac"+
    "\0\u19ea\0\u1a28\0\u1a66\0\u1aa4\0\u1ae2\0\u1b20\0\u1b5e\0\u1b9c"+
    "\0\u1bda\0\u1c18\0\u1c56\0\u1c94\0\u1cd2\0\u1d10\0\u1d4e\0\u1d8c"+
    "\0\u1dca\0\u1e08\0\u1e46\0\u1e84\0\u1ec2\0\u1f00\0\u1f3e\0\u1f7c"+
    "\0\u1fba\0\u1ff8\0\u2036\0\u2074\0\u20b2\0\u20f0\0\u212e\0\u216c"+
    "\0\u21aa\0\u21e8\0\u2226\0\u2264\0\u22a2\0\u22e0\0\u231e\0\u235c"+
    "\0\u239a\0\u23d8\0\u2416\0\u2454\0\u2492\0\u24d0\0\u250e\0\u254c"+
    "\0\u258a\0\u25c8\0\u2606\0\u2644\0\u2682\0\u26c0\0\u26fe\0\u273c"+
    "\0\u277a\0\u27b8\0\u27f6\0\u2834\0\u2872\0\u28b0\0\u28ee\0\u292c"+
    "\0\u296a\0\u29a8\0\u29e6\0\u2a24\0\u2a62\0\u2aa0\0\u2ade\0\u2ade"+
    "\0\u2b1c\0\u2b5a\0\u2b98\0\u2bd6\0\u2c14\0\u2c52\0\u2c90\0\u2cce"+
    "\0\u2d0c\0\u2d4a\0\u2d88\0\u2dc6\0\u2e04\0\u2e42\0\u2e80\0\u2ebe"+
    "\0\u2efc\0\u2f3a\0\u2f78\0\u2fb6\0\u2ff4\0\u3032\0\u3070\0\u30ae"+
    "\0\u30ec\0\u312a\0\u3168\0\u31a6\0\u31e4\0\u3222\0\u3260\0\u329e"+
    "\0\u32dc\0\u331a\0\u3358\0\u3396\0\u33d4\0\u3412\0\u3450\0\u348e"+
    "\0\u34cc\0\u350a\0\u3548\0\u3586\0\u35c4\0\u3602\0\u3640\0\u367e"+
    "\0\u36bc\0\u36fa\0\u3738\0\u3776\0\u37b4\0\u37f2\0\u3830\0\u386e"+
    "\0\u38ac\0\u38ea\0\u3928\0\u3966\0\u39a4\0\u39e2\0\u3a20\0\u3a5e"+
    "\0\u3a9c\0\u3ada\0\u3b18\0\u3b56\0\u3b94\0\u3bd2\0\u3c10\0\u3c4e"+
    "\0\u3c8c\0\u3cca\0\u3d08\0\u3d46\0\u3d84\0\u3dc2\0\u3e00\0\u3e3e"+
    "\0\u3e7c\0\u3eba\0\u3ef8\0\u3f36\0\u3f74\0\u3fb2\0\u3ff0\0\u402e"+
    "\0\u406c\0\u40aa\0\u40e8\0\u4126\0\u4164\0\u41a2\0\u41e0\0\u421e"+
    "\0\u425c\0\u429a\0\u42d8\0\u4316\0\u4354\0\u4392\0\u43d0\0\u440e"+
    "\0\u026c\0\u444c\0\u448a\0\u44c8\0\u4506\0\u4544\0\u4582\0\u45c0"+
    "\0\u45fe\0\u463c\0\u467a\0\u46b8\0\u46f6\0\u4734\0\u0fbe\0\u4772"+
    "\0\u47b0\0\u47ee\0\u482c\0\u486a\0\u48a8\0\u48e6\0\u4924\0\u4962"+
    "\0\u49a0\0\u49de\0\u1702\0\u4a1c\0\u4a5a\0\u4a98\0\u4ad6\0\u4b14"+
    "\0\u4b52\0\u4b90\0\u4bce\0\u4c0c\0\u4c4a\0\u4c88\0\u4cc6\0\u4d04"+
    "\0\u4d42\0\u4d80\0\u4dbe\0\u4dfc\0\u4e3a\0\u4e78\0\u4eb6\0\u4ef4"+
    "\0\u4f32\0\u4f70\0\u4fae\0\u4fec\0\u502a\0\u5068\0\u50a6\0\u50e4"+
    "\0\u5122\0\u5160\0\u519e\0\u51dc\0\u521a\0\u5258\0\u5296\0\u52d4"+
    "\0\u5312\0\u5350\0\u538e\0\u53cc\0\u540a\0\u5448\0\u5486\0\u54c4"+
    "\0\u5502\0\u5540\0\u557e\0\u55bc\0\u55fa\0\u5638\0\u5676\0\u56b4"+
    "\0\u56f2\0\u5730\0\u576e\0\u57ac\0\u57ea\0\u5828\0\u5866\0\u58a4"+
    "\0\u58e2\0\u5920\0\u595e\0\u599c\0\u59da\0\u5a18\0\u5a56\0\u5a94"+
    "\0\u5ad2\0\u5b10\0\u5b4e\0\u5b8c\0\u5bca\0\u5c08\0\u5c46\0\u5c84"+
    "\0\u5cc2\0\u158e\0\u5d00\0\u5d3e\0\u5d7c\0\u5dba\0\u5df8\0\u5e36"+
    "\0\u5e74\0\u5eb2\0\u5ef0\0\u5f2e\0\u5f6c\0\u5faa\0\u5fe8\0\u6026"+
    "\0\u6064\0\u60a2\0\u60e0\0\u611e\0\u615c\0\u619a\0\u61d8\0\u6216"+
    "\0\u6254\0\u6292\0\u62d0\0\u630e\0\u634c\0\u638a\0\u63c8\0\u6406"+
    "\0\u6444\0\u6482\0\u64c0\0\u64fe\0\u653c\0\u657a\0\u65b8\0\u65f6"+
    "\0\u6634\0\u6672\0\u66b0\0\u66ee\0\u672c\0\u676a\0\u67a8\0\u67e6"+
    "\0\u6824\0\u6862\0\u68a0\0\u68de\0\u691c\0\u695a\0\u6998\0\u69d6"+
    "\0\u6a14\0\u6a52\0\u6a90\0\u6ace\0\u6b0c\0\u6b4a\0\u6b88\0\u6bc6"+
    "\0\u6c04\0\u6c42\0\u6c80\0\u6cbe\0\u6cfc\0\u6d3a\0\u6d78\0\u6db6"+
    "\0\u6df4\0\u6e32\0\u6e70\0\u6eae\0\u6eec\0\u6f2a\0\u6f68\0\u6fa6"+
    "\0\u6fe4\0\u7022\0\u7060\0\u709e\0\u70dc\0\u711a\0\u7158\0\u7196"+
    "\0\u71d4\0\u7212\0\u7250\0\u728e\0\u72cc\0\u730a\0\u7348\0\u7386"+
    "\0\u73c4\0\u7402\0\u7440\0\u747e\0\u74bc\0\u74fa\0\u7538\0\u7576"+
    "\0\u75b4\0\u75f2\0\76\0\u7630\0\u766e\0\u76ac\0\u76ea\0\u7728"+
    "\0\u7766\0\u77a4\0\u77e2\0\u7820\0\u785e\0\u789c\0\u78da\0\u7918"+
    "\0\u7956\0\u7994\0\u79d2\0\u7a10\0\u7a4e\0\u7a8c\0\u7aca\0\u7b08"+
    "\0\u7b46\0\u7b84\0\u7bc2\0\u7c00\0\u7c3e\0\u7c7c\0\u7cba\0\u7cf8"+
    "\0\u7d36\0\u7d74\0\u7db2\0\u7df0\0\u7e2e\0\u7e6c\0\u7eaa\0\u7ee8"+
    "\0\u7f26\0\u7f64\0\u7fa2\0\u7fe0\0\u801e\0\u805c\0\u809a\0\u80d8"+
    "\0\u8116\0\u8154\0\u8192\0\u81d0\0\u820e\0\u824c\0\u828a\0\u82c8"+
    "\0\u8306\0\u8344\0\u8382\0\u83c0\0\u83fe\0\u843c\0\u847a\0\u84b8"+
    "\0\u84f6\0\u8534\0\u8572\0\u85b0\0\u85ee\0\u862c\0\u866a\0\u86a8"+
    "\0\u86e6\0\u8724\0\u8762\0\u87a0\0\u87de\0\u881c\0\u885a\0\u8898"+
    "\0\u88d6\0\u8914\0\u8952\0\u8990\0\u89ce\0\u8a0c\0\u8a4a\0\u8a88"+
    "\0\u8ac6\0\u8b04\0\u8b42\0\u8b80\0\u8bbe\0\u8bfc\0\u8c3a\0\u8c78"+
    "\0\u8cb6\0\u8cf4\0\u8d32\0\u8d70\0\u8dae\0\u8dec\0\u8e2a\0\u8e68"+
    "\0\u8ea6\0\u8ee4\0\76\0\u8f22\0\u8f60\0\u8f9e\0\u8fdc\0\u901a"+
    "\0\u9058\0\u9096\0\u90d4\0\u9112\0\u9150\0\u918e\0\u91cc\0\u920a"+
    "\0\u9248\0\u9286\0\u92c4\0\u9302\0\u9340\0\u937e\0\u93bc\0\u93fa"+
    "\0\u9438\0\u9476\0\u94b4\0\u94f2\0\u9530\0\u956e\0\u95ac\0\u95ea"+
    "\0\u9628\0\u9666\0\u96a4\0\u96e2\0\u9720\0\u975e\0\u979c\0\u97da"+
    "\0\u8e68\0\u8ea6\0\u9818\0\u9856\0\u9894\0\u98d2\0\u9910\0\u994e"+
    "\0\u998c\0\u99ca\0\u9a08\0\u9a46\0\u1458\0\u9a84\0\u9ac2\0\u9b00"+
    "\0\u9b3e\0\u9b7c\0\u9bba\0\u9bf8\0\u9c36\0\u9c74\0\u9cb2\0\u9cf0"+
    "\0\u9d2e\0\76";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\2\1\23\1\24\1\20\1\21\1\25\1\26"+
    "\1\21\1\27\1\30\1\31\1\32\1\16\1\33\1\26"+
    "\1\2\1\34\1\35\1\36\1\20\1\37\1\40\1\41"+
    "\1\42\1\43\1\2\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\13\1\52\1\13\1\53\1\13\1\54\1\55"+
    "\1\56\1\13\3\2\100\0\1\57\1\60\1\61\1\62"+
    "\1\63\1\64\1\65\12\0\1\66\3\0\1\67\3\0"+
    "\1\70\3\0\1\71\7\0\1\72\1\73\3\0\1\74"+
    "\1\75\1\76\1\77\1\100\1\101\1\0\1\102\1\0"+
    "\1\103\1\0\1\104\1\105\1\106\10\0\5\107\44\0"+
    "\1\110\24\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\1\112\3\13\1\0\1\13\1\113"+
    "\15\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\1\13\1\114\15\13"+
    "\7\0\1\13\1\115\5\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\6\13\1\116"+
    "\10\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\1\117\1\13\1\120\1\13\1\0"+
    "\1\121\3\13\1\122\12\13\7\0\1\13\1\123\5\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\5\124\1\12\1\124\14\0"+
    "\1\125\7\0\1\126\3\0\1\126\3\0\4\124\1\127"+
    "\17\124\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\17\13\7\0\5\130"+
    "\1\131\1\130\2\111\4\0\1\27\5\0\1\132\5\0"+
    "\1\111\4\0\1\133\4\0\4\130\1\0\17\130\5\0"+
    "\51\15\1\0\17\15\21\0\1\134\100\0\1\27\10\0"+
    "\1\27\75\0\1\135\67\0\1\16\55\0\5\13\1\0"+
    "\1\13\14\0\1\136\17\0\4\13\1\0\17\13\24\0"+
    "\1\27\1\0\1\137\106\0\1\134\45\0\5\124\1\12"+
    "\1\124\2\111\12\0\1\125\5\0\1\111\4\0\1\111"+
    "\4\0\4\124\1\0\17\124\5\0\1\140\62\0\1\141"+
    "\14\0\5\142\1\131\1\142\2\111\12\0\1\143\5\0"+
    "\1\111\4\0\1\111\4\0\1\144\3\142\1\0\6\142"+
    "\1\145\2\142\1\146\3\142\1\147\1\142\27\0\1\150"+
    "\16\0\1\15\34\0\42\151\1\152\6\151\1\0\17\151"+
    "\5\0\44\153\1\154\4\153\1\0\17\153\7\0\1\155"+
    "\1\156\2\13\1\157\2\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\3\13\1\160"+
    "\13\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\2\13\1\160\1\13\1\0\1\13"+
    "\1\161\2\13\1\162\12\13\7\0\1\13\1\163\5\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\2\13\1\42\1\13"+
    "\1\0\17\13\7\0\1\164\6\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\3\13"+
    "\1\165\13\13\7\0\1\166\6\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\3\13\1\167\1\0"+
    "\2\13\1\170\4\13\1\171\2\13\1\172\1\13\1\173"+
    "\2\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\4\13\1\174\12\13"+
    "\7\0\2\13\1\175\4\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\5\13\1\176"+
    "\11\13\7\0\1\177\2\13\1\160\3\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\3\13\1\164\6\13\1\200\4\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\6\13\1\201\10\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\1\202\1\13"+
    "\1\203\1\13\1\0\2\13\1\204\14\13\7\0\1\13"+
    "\1\205\5\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\1\206\16\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\4\13\1\207\12\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\1\210"+
    "\3\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\2\13\1\211\1\13"+
    "\1\0\2\13\1\212\14\13\60\0\1\110\67\0\1\213"+
    "\5\0\1\214\75\0\1\215\25\0\1\216\54\0\1\217"+
    "\64\0\1\220\2\0\1\221\3\0\1\222\22\0\1\223"+
    "\117\0\1\224\71\0\1\137\54\0\1\225\62\0\1\141"+
    "\15\0\1\226\2\0\1\227\46\0\1\135\67\0\1\135"+
    "\3\0\1\230\2\0\1\231\21\0\1\232\52\0\1\233"+
    "\22\0\1\234\45\0\1\235\3\0\1\236\4\0\1\237"+
    "\2\0\1\240\1\0\1\241\65\0\1\242\23\0\1\243"+
    "\52\0\1\244\20\0\1\245\2\0\1\135\47\0\1\232"+
    "\6\0\1\246\71\0\1\247\62\0\1\250\1\0\1\251"+
    "\4\0\1\252\24\0\1\253\46\0\1\254\101\0\1\255"+
    "\64\0\1\256\77\0\1\257\4\0\1\260\22\0\1\261"+
    "\144\0\1\262\27\0\5\124\1\131\1\124\2\111\12\0"+
    "\1\125\5\0\1\111\4\0\1\111\4\0\4\124\1\0"+
    "\17\124\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\12\13\1\263\4\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\5\13\1\160\11\13\7\0"+
    "\2\13\1\264\4\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\16\13\1\265\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\1\266\3\13\1\0\1\267\12\13\1\160\3\13"+
    "\7\0\1\13\1\270\5\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\4\13\1\271"+
    "\12\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\2\13\1\272\14\13"+
    "\7\0\1\13\1\273\5\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\17\13\7\0"+
    "\1\274\6\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\1\275\6\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\1\13"+
    "\1\276\15\13\7\0\7\124\2\111\12\0\1\124\5\0"+
    "\1\111\4\0\1\111\4\0\4\124\1\0\17\124\7\0"+
    "\5\124\1\0\1\124\14\0\1\125\17\0\4\124\1\0"+
    "\17\124\14\0\1\277\23\0\1\300\75\0\2\126\41\0"+
    "\1\301\1\0\7\130\2\111\2\0\1\134\7\0\1\130"+
    "\5\0\1\111\4\0\1\111\4\0\4\130\1\0\17\130"+
    "\7\0\5\124\1\131\1\124\14\0\1\125\17\0\4\124"+
    "\1\0\17\124\7\0\5\130\1\0\1\130\14\0\1\132"+
    "\17\0\4\130\1\0\17\130\7\0\5\302\1\131\1\302"+
    "\2\111\12\0\1\303\5\0\1\111\4\0\1\111\4\0"+
    "\4\302\1\0\17\302\5\0\1\135\77\0\5\13\1\0"+
    "\1\13\14\0\1\304\17\0\1\13\1\305\2\13\1\0"+
    "\6\13\1\306\10\13\70\0\1\307\60\0\1\310\107\0"+
    "\1\311\17\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\17\142\7\0\1\142\1\315\1\142\1\316\1\142\1\0"+
    "\1\142\14\0\1\317\17\0\4\142\1\0\1\142\1\320"+
    "\1\142\1\321\3\142\1\322\1\142\1\323\3\142\1\324"+
    "\1\142\7\0\1\142\1\325\5\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\17\142\7\0\2\142\1\326\4\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\17\142\7\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\6\142\1\327\10\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\2\142\1\330"+
    "\14\142\5\0\22\150\1\331\26\150\1\0\17\150\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\1\13\1\163\2\13\1\0\17\13\7\0\1\13"+
    "\1\332\5\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\3\13\1\333\13\13\5\0\1\135\1\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\3\13\1\334\3\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\7\13\1\335\7\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\1\13\1\336\15\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\3\13"+
    "\1\337\13\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\1\13\1\160"+
    "\15\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\1\13\1\340\2\13\1\0\17\13"+
    "\7\0\2\13\1\341\4\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\4\13\1\342"+
    "\2\13\1\343\7\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\3\13"+
    "\1\344\13\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\6\13\1\345"+
    "\10\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\11\13\1\346\5\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\1\347\3\13\1\0\17\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\3\13\1\342\13\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\1\350"+
    "\3\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\4\13"+
    "\1\351\12\13\7\0\2\13\1\352\4\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\3\13\1\353\3\13\1\354\7\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\11\13\1\355\5\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\4\13\1\356\12\13\7\0\2\13\1\357\4\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\2\13\1\360\1\165\13\13\7\0\1\361\6\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\1\362\1\13\1\363"+
    "\1\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\2\13\1\364\1\13"+
    "\1\0\4\13\1\365\12\13\7\0\4\13\1\366\2\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\1\13"+
    "\1\367\15\13\7\0\1\13\1\160\5\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\7\0\2\13\1\345\4\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\2\13\1\370\1\13\1\0\17\13\71\0"+
    "\1\371\70\0\1\135\22\0\1\372\63\0\1\373\52\0"+
    "\1\374\17\0\1\135\13\0\1\375\52\0\1\376\22\0"+
    "\1\377\74\0\1\u0100\75\0\1\u0101\146\0\1\u0102\70\0"+
    "\1\u0103\11\0\1\u0104\15\0\1\135\45\0\1\310\14\0"+
    "\1\141\15\0\1\u0105\147\0\1\u0106\25\0\1\u0107\53\0"+
    "\1\u0108\67\0\1\u0109\77\0\1\u010a\73\0\1\135\70\0"+
    "\1\u010b\33\0\1\u010c\51\0\1\u010d\2\0\1\u010e\71\0"+
    "\1\u010f\100\0\1\u0110\100\0\1\u0111\57\0\1\u0112\105\0"+
    "\1\u010d\65\0\1\u0113\106\0\1\u0114\23\0\1\u0115\50\0"+
    "\1\u0116\3\0\1\u0117\77\0\1\u0118\70\0\1\u0119\23\0"+
    "\1\u011a\47\0\1\u011b\1\233\22\0\1\u011c\140\0\1\u011d"+
    "\1\0\1\u011e\75\0\1\u011f\6\0\1\u0120\25\0\1\u0121"+
    "\142\0\1\u0122\25\0\1\135\76\0\1\u0110\140\0\1\u0123"+
    "\30\0\5\107\142\0\1\u0124\5\0\1\u010e\16\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\1\13\1\u0125\15\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\1\u0126\16\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\1\u0127"+
    "\16\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\4\13\1\u0128\12\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\1\13\1\u0129\15\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\2\13\1\113\1\13\1\0\17\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\3\13\1\160\13\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\3\13\1\267\13\13\5\0\1\135\1\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\1\13\1\u012a\15\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\7\13\1\u012b\7\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\1\u012c\3\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\1\u012d\3\13\1\0\17\13"+
    "\14\0\1\277\66\0\1\301\14\0\1\134\62\0\7\302"+
    "\2\111\12\0\1\302\5\0\1\u012e\4\0\1\111\4\0"+
    "\4\302\1\0\17\302\7\0\5\302\1\0\1\302\14\0"+
    "\1\303\17\0\4\302\1\0\17\302\7\0\5\13\1\0"+
    "\1\13\14\0\1\304\17\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\4\13\1\u012f\12\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\1\u0130\3\13\1\0\17\13\65\0\1\u0131\73\0\1\u0132"+
    "\102\0\1\u0133\51\0\1\u0134\31\0\1\u0135\6\0\5\124"+
    "\1\131\1\124\2\111\12\0\1\125\2\0\1\u0136\2\0"+
    "\1\u0137\4\0\1\111\4\0\4\124\1\0\17\124\41\0"+
    "\1\134\43\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\1\142\1\u0138\15\142\7\0\7\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\4\142\1\u0139\12\142\7\0\5\142\1\0"+
    "\1\142\14\0\1\317\17\0\4\142\1\0\17\142\7\0"+
    "\1\u013a\6\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\17\142"+
    "\7\0\7\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\1\142"+
    "\1\u013b\15\142\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\2\142"+
    "\1\u013c\1\142\1\0\17\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\2\142\1\u013d\1\142\1\0\17\142\7\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\4\142\1\0\1\142\1\u013e\15\142"+
    "\7\0\7\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\15\142"+
    "\1\u013f\1\142\7\0\2\142\1\u0140\4\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\17\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\11\142\1\u0141\5\142\7\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\2\142\1\u0142\1\142\1\0\17\142"+
    "\5\0\22\150\1\331\16\150\1\u0143\7\150\1\0\17\150"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\1\u0144\3\13\1\0\17\13\7\0\2\13"+
    "\1\u0145\4\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\1\u0146"+
    "\3\13\1\0\4\13\1\u0147\12\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\2\13\1\u0148\14\13\7\0\7\13\2\111\2\0"+
    "\1\135\7\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\1\13"+
    "\1\342\15\13\7\0\3\13\1\u0149\3\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\1\13\1\u014a"+
    "\2\13\1\0\3\13\1\u014b\1\u014c\1\51\11\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\1\13\1\u014d\15\13\7\0\2\13"+
    "\1\336\4\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\1\13\1\u014e\15\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\1\13\1\u014f\15\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\2\13\1\160\1\13"+
    "\1\0\17\13\7\0\2\13\1\u0150\4\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\2\13\1\336\14\13"+
    "\7\0\2\13\1\u0151\4\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\17\13\7\0"+
    "\2\13\1\357\4\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\17\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\1\13\1\u0152\15\13\7\0\2\13\1\u0153"+
    "\4\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\17\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\2\13\1\u0154\14\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\2\13"+
    "\1\u0155\14\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\2\13\1\165"+
    "\14\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\7\13\1\u0156\7\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\2\13\1\u0157\14\13\7\0"+
    "\2\13\1\u0158\4\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\3\13\1\u0128\13\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\3\13\1\271\13\13\7\0"+
    "\1\165\6\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\2\13\1\u0159"+
    "\4\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\17\13\7\0\1\u0128\6\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\14\13\1\u015a\2\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\2\13\1\u015b\14\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\2\13"+
    "\1\u015c\14\13\7\0\4\13\1\u015d\2\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\60\0\1\u015e\74\0\1\u015f\75\0\1\u0160\101\0"+
    "\1\u0161\66\0\1\214\103\0\1\135\20\0\1\135\52\0"+
    "\1\u0162\103\0\1\u0163\61\0\1\u0164\75\0\1\u0165\106\0"+
    "\1\u0166\64\0\1\u0167\75\0\1\u0168\34\0\1\u0169\136\0"+
    "\1\u016a\104\0\1\u016b\36\0\1\135\133\0\1\u010d\27\0"+
    "\1\u016c\40\0\1\u016d\6\0\1\u016e\1\u016f\1\101\71\0"+
    "\1\u0170\26\0\1\u0109\144\0\1\u0171\75\0\1\u0172\71\0"+
    "\1\135\32\0\1\u0173\145\0\1\u0109\25\0\1\u0174\75\0"+
    "\1\u011a\144\0\1\u0175\26\0\1\u0176\145\0\1\u0177\75\0"+
    "\1\u0178\75\0\1\233\102\0\1\u0179\70\0\1\u017a\25\0"+
    "\1\u017b\50\0\1\u0161\75\0\1\376\22\0\1\233\77\0"+
    "\1\u017c\73\0\1\u0161\63\0\1\u017d\63\0\1\u0174\75\0"+
    "\1\u017e\27\0\1\u017f\150\0\1\u0180\16\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\3\13\1\u0181\13\13\7\0\1\13\1\u0182\5\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\4\13"+
    "\1\u0183\12\13\7\0\2\13\1\160\4\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\1\357\3\13\1\0\17\13\7\0"+
    "\2\13\1\u0184\4\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\17\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\2\13\1\u0185\14\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\10\13\1\160\6\13\7\0\5\124\1\131\1\124"+
    "\2\111\12\0\1\125\2\0\1\u0186\2\0\1\111\4\0"+
    "\1\111\4\0\4\124\1\0\17\124\7\0\1\13\1\u0187"+
    "\5\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\17\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\2\13\1\u0188\14\13\70\0\1\135\15\0\1\u0189\117\0"+
    "\1\u018a\52\0\5\u018b\1\0\1\u018b\14\0\1\u0134\17\0"+
    "\4\u018b\1\0\17\u018b\7\0\5\u018c\1\0\1\u018c\14\0"+
    "\1\u0135\17\0\4\u018c\1\0\17\u018c\7\0\5\u018d\1\0"+
    "\1\u018d\14\0\1\u018e\5\0\1\u018f\11\0\4\u018d\1\0"+
    "\17\u018d\7\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\16\142\1\u0190\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\2\142\1\u0191\14\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\14\142\1\u0192\2\142\7\0\1\142"+
    "\1\u0193\5\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\3\142"+
    "\1\u0194\13\142\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\2\142"+
    "\1\u0195\1\142\1\0\17\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\3\142\1\u013e\13\142\7\0\2\142"+
    "\1\u0192\4\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\17\142"+
    "\7\0\7\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\7\142"+
    "\1\u0192\4\142\1\u0192\2\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\11\142\1\u0196\5\142\7\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\u0197\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\4\142\1\0\17\142\7\0\4\142"+
    "\1\u0198\2\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\17\142"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\13\13\1\u0199\3\13\7\0"+
    "\1\13\1\u019a\5\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\17\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\1\u019b\16\13\7\0\1\u019c\6\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\1\u019d\3\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\2\13\1\120\1\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\1\13\1\u019e\15\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\5\13\1\176\11\13\7\0\3\13\1\160"+
    "\3\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\17\13\7\0\1\u019f\6\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\11\13\1\u01a0"+
    "\5\13\5\0\1\135\1\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\4\13"+
    "\1\u014c\12\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\13\13\1\336"+
    "\3\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\4\13\1\u01a1\12\13"+
    "\7\0\1\13\1\u01a2\5\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\1\u01a3\3\13\1\0\1\13\1\u01a4\15\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\1\u01a5\16\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\1\13\1\u01a6\15\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\6\13\1\160\10\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\1\u01a7\3\13\1\0"+
    "\17\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\4\13\1\u01a8\12\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\1\13\1\u01a9\15\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\1\u01aa\3\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\4\13\1\u01ab\12\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\1\13\1\160"+
    "\2\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\1\u01ac\3\13\1\0"+
    "\17\13\62\0\1\u01ad\23\0\1\u01ae\150\0\1\u01af\23\0"+
    "\1\135\136\0\1\u011a\34\0\1\u01b0\145\0\1\u01b1\103\0"+
    "\1\135\16\0\1\u01b2\146\0\1\u01b3\106\0\1\u01b4\13\0"+
    "\1\u01b5\144\0\1\u01b6\70\0\1\u01b7\77\0\1\220\101\0"+
    "\1\u01b8\101\0\1\244\23\0\1\135\72\0\1\u01b9\156\0"+
    "\1\u0163\12\0\1\135\55\0\1\u016f\104\0\1\u0109\66\0"+
    "\1\u01ba\22\0\1\u01bb\137\0\1\u01bc\5\0\1\u01bd\74\0"+
    "\1\u01be\76\0\1\u01bf\102\0\1\135\62\0\1\u01c0\106\0"+
    "\1\u01c1\72\0\1\u01c2\67\0\1\u01c3\76\0\1\135\74\0"+
    "\1\u01c4\55\0\1\u01c5\52\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\11\13"+
    "\1\u01c6\5\13\7\0\1\160\6\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\1\13\1\u01c7\5\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\4\13\1\u01c8\12\13\5\0\1\135"+
    "\1\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\2\13\1\u01c9\14\13\7\0"+
    "\5\u01ca\1\0\1\u01ca\14\0\1\u01cb\5\0\1\u01cc\11\0"+
    "\4\u01ca\1\0\17\u01ca\7\0\7\13\2\111\12\0\1\u01cd"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\2\13\1\u01ce\4\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\17\13\60\0"+
    "\1\u01cf\75\0\1\u01d0\24\0\7\u018b\14\0\1\u018b\11\0"+
    "\1\u01d1\5\0\4\u018b\1\0\17\u018b\7\0\7\u018c\14\0"+
    "\1\u018c\17\0\4\u018c\1\0\17\u018c\1\0\1\u01d1\5\0"+
    "\7\u018d\12\0\1\312\1\0\1\u018d\5\0\1\u01d2\1\314"+
    "\10\0\4\u018d\1\0\17\u018d\7\0\5\u018d\1\0\1\u018d"+
    "\14\0\1\u018e\17\0\4\u018d\1\0\17\u018d\35\0\1\u0136"+
    "\47\0\7\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\1\u01d3"+
    "\16\142\7\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\1\142\1\u01d4\15\142\7\0\7\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\14\142\1\u01d5\2\142\7\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\3\142\1\u01d6\13\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\10\142\1\u01d7"+
    "\6\142\7\0\7\142\2\111\10\0\1\312\1\0\1\u01d8"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\17\142\7\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\1\142\1\u01d9\15\142\7\0\7\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\1\u01da\3\142\1\0\17\142\5\0\1\u01b4\1\0\7\13"+
    "\2\111\2\0\1\135\7\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\1\u01db"+
    "\3\13\1\0\17\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\2\13"+
    "\1\u01dc\14\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\1\13\1\u01dd"+
    "\15\13\7\0\1\13\1\165\5\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\7\13\1\335\7\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\1\13\1\271\2\13\1\0\17\13\7\0\2\13"+
    "\1\u01de\4\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\7\13\1\160\7\13\7\0\3\13\1\u01c6\3\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\1\u01df\6\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\1\u01e0\3\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\1\13\1\u01e1\2\13\1\0\17\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\12\13\1\u01e2\4\13\7\0\4\13\1\356"+
    "\2\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\17\13\7\0\1\u01e3\6\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\7\13\1\u01e4"+
    "\7\13\7\0\2\13\1\u01e5\4\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\7\13\1\u01e6\7\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\2\13\1\160\14\13\70\0\1\u01e7"+
    "\14\0\1\135\76\0\1\u01e8\150\0\1\u01e9\17\0\1\135"+
    "\53\0\1\u01ea\46\0\1\u01eb\54\0\1\u01ec\71\0\1\u01b4"+
    "\14\0\1\135\125\0\1\u01ed\104\0\1\u0161\24\0\1\233"+
    "\153\0\1\u0108\62\0\1\376\110\0\1\135\21\0\1\u01e7"+
    "\72\0\1\u01ee\140\0\1\u01ef\76\0\1\u01f0\113\0\1\u01f1"+
    "\17\0\1\u0119\71\0\1\u01f2\154\0\1\u01f3\20\0\1\233"+
    "\145\0\1\135\76\0\1\u01f4\22\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\1\u01f5\3\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\1\13\1\u01f6"+
    "\15\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\2\13\1\u01f7\1\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\13\13\1\160\3\13\7\0"+
    "\7\u01ca\14\0\1\u01ca\17\0\4\u01ca\1\0\17\u01ca\7\0"+
    "\5\u01ca\1\0\1\u01ca\14\0\1\u01cb\17\0\4\u01ca\1\0"+
    "\17\u01ca\35\0\1\u0186\47\0\7\13\2\111\12\0\1\u01f8"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\u01f9\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\66\0\1\u01fa\63\0"+
    "\1\u01c4\52\0\1\u01fb\104\0\1\134\44\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\1\142\1\u013d\15\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\3\142\1\u0192"+
    "\13\142\7\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\1\142\1\u01fc\15\142\7\0\7\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\4\142\1\u01fd\12\142\7\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\4\142\1\u01fe\12\142\7\0"+
    "\1\142\1\u01ff\5\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\17\142\7\0\1\142\1\u0200\5\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\17\142\7\0\7\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\2\142\1\u01d4\14\142\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\7\13\1\u0128\7\13\7\0\2\13\1\u0201\4\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\111\2\0\1\u0202"+
    "\7\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\4\13\1\u0203"+
    "\12\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\7\13\1\u0204\7\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\1\13\1\u0205\2\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\1\13\1\u0206\15\13\7\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\1\13\1\u0207\15\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\1\165\16\13\7\0\2\13\1\u0208\4\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\1\13\1\u01e6"+
    "\15\13\5\0\1\u0209\1\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\52\0\1\u020a\103\0\1\u020b\71\0\1\u01ae\113\0\1\135"+
    "\35\0\1\u020c\75\0\1\u020d\131\0\1\u0161\75\0\1\u020e"+
    "\62\0\1\u020f\102\0\1\u0210\75\0\1\u0211\74\0\1\233"+
    "\27\0\1\u0212\147\0\1\u0213\21\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\7\13\1\165\7\13\5\0\1\135\1\0\7\13\2\111"+
    "\12\0\1\u0214\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\1\u0215\6\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\5\0\1\u0216\1\0\7\13\2\111\12\0\1\13\5\0"+
    "\1\111\4\0\1\111\4\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\7\13\1\u0217\7\13\11\0\1\u0218"+
    "\73\0\1\142\1\u0192\5\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\17\142\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\2\142"+
    "\1\u0219\1\142\1\0\17\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\1\142\1\u0192\15\142\7\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\1\u021a\3\142\1\0\1\142\1\u021b"+
    "\15\142\7\0\1\142\1\u021c\5\142\2\111\10\0\1\312"+
    "\1\0\1\142\5\0\1\313\1\314\3\0\1\111\4\0"+
    "\4\142\1\0\17\142\5\0\1\135\1\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\2\0\1\u021d\44\0\1\u021e\35\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\2\13\1\u0182\1\13\1\0\17\13\7\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\1\13\1\u0205\15\13\7\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\2\13\1\u014c"+
    "\1\13\1\0\17\13\5\0\1\u021f\1\0\7\13\2\111"+
    "\12\0\1\u0220\5\0\1\111\4\0\1\111\4\0\4\13"+
    "\1\0\17\13\7\0\1\u0221\6\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\1\13\1\u015c\15\13\5\0"+
    "\1\135\60\0\1\u0222\75\0\1\233\14\0\1\135\24\0"+
    "\1\u0223\50\0\1\u0216\156\0\1\u0224\67\0\1\u020f\71\0"+
    "\1\u016f\26\0\1\u021f\24\0\1\u0225\52\0\1\u0226\146\0"+
    "\1\u017e\24\0\1\u0227\75\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\2\13\1\u0228\1\13"+
    "\1\0\17\13\5\0\1\u0229\1\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\42\0\1\135\42\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\2\13\1\u022a\1\13"+
    "\1\0\17\13\54\0\1\u022b\30\0\1\u0192\6\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\17\142\7\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\142\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\5\142\1\u022c\11\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\3\142\1\u022d"+
    "\13\142\7\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\2\142\1\u022e"+
    "\1\142\1\0\17\142\52\0\1\u022f\30\0\1\u021e\1\0"+
    "\5\u0230\1\0\1\u0230\14\0\1\u0231\17\0\4\u0230\1\0"+
    "\17\u0230\5\0\1\135\24\0\1\u0232\52\0\7\13\2\111"+
    "\12\0\1\13\5\0\1\111\4\0\1\111\4\0\2\13"+
    "\1\u0233\1\13\1\0\17\13\7\0\2\13\1\271\4\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\54\0\1\u0234\75\0\1\u0235\75\0"+
    "\1\u0236\75\0\1\u0237\32\0\1\376\160\0\1\u0238\10\0"+
    "\1\u0239\6\13\2\111\12\0\1\13\5\0\1\111\4\0"+
    "\1\111\4\0\4\13\1\0\17\13\5\0\1\135\1\0"+
    "\5\u023a\1\0\1\u023a\14\0\1\u023b\17\0\4\u023a\1\0"+
    "\17\u023a\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\12\13\1\u023c\4\13"+
    "\10\0\1\u023d\74\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\u023e\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\17\142\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\11\142\1\u023f\5\142\7\0\1\142\1\u0240\5\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\4\142\1\0\17\142\10\0\1\u0241"+
    "\74\0\7\u0230\14\0\1\u0230\14\0\1\u0242\2\0\4\u0230"+
    "\1\0\17\u0230\7\0\5\u0230\1\0\1\u0230\14\0\1\u0231"+
    "\17\0\4\u0230\1\0\17\u0230\32\0\1\u0243\52\0\1\u01f5"+
    "\6\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\17\13\7\0\1\u0244\75\0\1\u0245"+
    "\157\0\1\u0246\13\0\1\u020a\147\0\1\u0247\23\0\7\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\7\13\1\u0248\7\13\7\0\7\u023a\14\0"+
    "\1\u023a\17\0\4\u023a\1\0\17\u023a\7\0\5\u023a\1\0"+
    "\1\u023a\14\0\1\u023b\17\0\4\u023a\1\0\17\u023a\7\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\11\13\1\u0249\5\13\72\0\1\u024a"+
    "\12\0\7\142\2\111\10\0\1\312\1\0\1\142\5\0"+
    "\1\313\1\314\3\0\1\111\4\0\4\142\1\0\11\142"+
    "\1\u024b\5\142\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\2\142"+
    "\1\u024c\1\142\1\0\17\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\12\142\1\u024d\4\142\63\0\1\u024e"+
    "\55\0\1\u024f\105\0\1\u0250\104\0\1\u0251\101\0\1\u0252"+
    "\77\0\1\u0253\65\0\1\u0254\24\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\1\13\1\u0255\15\13\7\0\7\13\2\111\12\0\1\13"+
    "\5\0\1\111\4\0\1\111\4\0\4\13\1\0\4\13"+
    "\1\u0256\12\13\32\0\1\u0257\52\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\2\142\1\u0258\1\142\1\0\17\142\7\0\1\u0259"+
    "\6\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\17\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\3\142\1\u025a"+
    "\13\142\52\0\1\u025b\30\0\1\u024f\3\0\1\u025c\1\u025d"+
    "\1\0\1\u025e\23\0\1\u025f\6\0\1\u0260\1\0\1\u0261"+
    "\107\0\1\u0262\23\0\1\u0263\144\0\1\u0264\100\0\1\u0265"+
    "\44\0\1\u0266\50\0\1\u021f\1\0\7\13\2\111\12\0"+
    "\1\13\5\0\1\111\4\0\1\111\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\111\12\0\1\13\5\0\1\111"+
    "\4\0\1\111\4\0\4\13\1\0\2\13\1\u0267\14\13"+
    "\62\0\1\u0268\22\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\3\142\1\u0269\13\142\7\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\4\142\1\0\3\142\1\u026a\13\142\7\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\4\142\1\0\15\142\1\u0192\1\142"+
    "\13\0\1\u026b\72\0\1\u026c\137\0\1\u026d\30\0\1\u026e"+
    "\6\0\1\u025e\25\0\1\u026f\3\0\1\u026f\1\u0270\6\0"+
    "\1\u0271\33\0\1\u025e\66\0\42\u0260\1\u0272\6\u0260\1\0"+
    "\17\u0260\5\0\44\u0261\1\u0273\4\u0261\1\0\17\u0261\10\0"+
    "\1\u0274\72\0\1\u021f\151\0\1\u0275\75\0\1\u0276\23\0"+
    "\7\13\2\111\12\0\1\13\5\0\1\111\4\0\1\111"+
    "\4\0\4\13\1\0\1\13\1\u0277\15\13\60\0\1\u0278"+
    "\24\0\2\142\1\u0279\4\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\17\142\7\0\7\142\2\111\10\0\1\312\1\0"+
    "\1\142\5\0\1\313\1\314\3\0\1\111\4\0\4\142"+
    "\1\0\1\142\1\u027a\15\142\61\0\1\u027b\73\0\1\u027c"+
    "\77\0\1\u027d\21\0\1\u026e\41\0\1\u0270\42\0\1\u027e"+
    "\23\0\1\u027f\60\0\1\u0263\112\0\2\u026f\41\0\1\u0272"+
    "\41\u0260\1\u0280\6\u0260\1\0\17\u0260\5\0\1\u0273\41\u0261"+
    "\1\u0281\1\u0261\1\u0273\4\u0261\1\0\17\u0261\32\0\1\u0282"+
    "\123\0\1\u0283\71\0\1\u0284\30\0\1\13\1\336\5\13"+
    "\2\111\12\0\1\13\5\0\1\111\4\0\1\111\4\0"+
    "\4\13\1\0\17\13\70\0\1\u0285\14\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\u0286\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\17\142\7\0\7\142\2\111"+
    "\10\0\1\312\1\0\1\u0287\5\0\1\313\1\314\3\0"+
    "\1\111\4\0\4\142\1\0\17\142\60\0\1\u0288\75\0"+
    "\1\u026e\77\0\1\u027c\20\0\1\u026e\6\0\1\u027e\32\0"+
    "\1\u0270\42\0\1\u027e\66\0\1\u0272\15\u0260\1\u0289\23\u0260"+
    "\1\u0280\6\u0260\1\0\17\u0260\5\0\16\u0261\1\u028a\25\u0261"+
    "\1\u0273\4\u0261\1\0\17\u0261\32\0\1\u028b\53\0\1\u0109"+
    "\161\0\1\135\53\0\1\u028c\32\0\7\142\2\111\10\0"+
    "\1\312\1\0\1\142\5\0\1\313\1\314\3\0\1\111"+
    "\4\0\1\142\1\u028d\2\142\1\0\17\142\7\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\4\142\1\0\6\142\1\u028e\10\142"+
    "\62\0\1\u028f\20\0\1\u0290\100\0\1\u0291\74\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\1\u0292\3\142\1\0\17\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\4\142\1\0\1\142\1\u0293"+
    "\15\142\24\0\1\u0294\113\0\1\u0295\105\0\1\u0296\32\0"+
    "\2\142\1\u0297\4\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\4\142\1\0"+
    "\17\142\7\0\7\142\2\111\10\0\1\312\1\0\1\142"+
    "\5\0\1\313\1\314\3\0\1\111\4\0\1\u0298\3\142"+
    "\1\0\17\142\45\0\1\u0299\41\0\1\u029a\73\0\7\142"+
    "\2\111\10\0\1\312\1\0\1\142\5\0\1\313\1\314"+
    "\3\0\1\111\4\0\1\u0192\3\142\1\0\17\142\7\0"+
    "\7\142\2\111\10\0\1\312\1\0\1\142\5\0\1\313"+
    "\1\314\3\0\1\111\4\0\1\142\1\u01d5\2\142\1\0"+
    "\17\142\74\0\1\u029b\55\0\1\u029c\102\0\1\u029d\24\0"+
    "\1\u020c\141\0\1\u029e\34\0\1\u029f\134\0\1\u02a0\104\0"+
    "\1\u02a1\76\0\1\u02a2\17\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[40300];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\13\1\1\11\1\1\2\11\4\1\2\11"+
    "\27\1\30\0\1\1\1\0\14\1\3\0\1\1\2\0"+
    "\1\1\1\11\1\1\4\0\1\1\1\0\4\1\2\0"+
    "\1\1\1\0\37\1\12\0\1\1\35\0\15\1\2\0"+
    "\1\1\2\0\2\1\4\0\1\1\1\0\2\1\1\0"+
    "\11\1\1\0\37\1\6\0\1\1\45\0\14\1\6\0"+
    "\47\1\24\0\1\1\16\0\5\1\1\0\2\1\4\0"+
    "\1\1\2\0\35\1\4\0\1\1\24\0\5\1\2\0"+
    "\2\1\4\0\24\1\16\0\5\1\1\0\1\11\6\1"+
    "\1\0\7\1\1\0\1\1\4\0\1\1\3\0\2\1"+
    "\1\0\1\1\1\0\4\1\2\0\3\1\6\0\3\1"+
    "\1\0\3\1\4\0\1\1\5\0\2\1\1\0\1\1"+
    "\1\0\3\1\7\0\2\1\1\0\3\1\7\0\2\1"+
    "\1\0\3\1\10\0\1\11\1\1\2\0\1\1\1\0"+
    "\2\1\14\0\1\1\1\0\2\1\13\0\2\1\1\0"+
    "\2\1\2\0\2\1\3\0\2\1\3\0\2\1\11\0"+
    "\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
   public String lexeme ="";


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 214) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme=yytext(); return Error;
            }
          case 23: break;
          case 2: 
            { /*ignore*/
            }
          case 24: break;
          case 3: 
            { lexeme=yytext(); return Identifier;
            }
          case 25: break;
          case 4: 
            { lexeme=yytext(); return Int_value;
            }
          case 26: break;
          case 5: 
            { lexeme=yytext(); return Logical_operator;
            }
          case 27: break;
          case 6: 
            { lexeme=yytext(); return Comments;
            }
          case 28: break;
          case 7: 
            { lexeme=yytext(); return Arithmetic_operator;
            }
          case 29: break;
          case 8: 
            { lexeme=yytext(); return Opening;
            }
          case 30: break;
          case 9: 
            { lexeme=yytext(); return Closing;
            }
          case 31: break;
          case 10: 
            { lexeme=yytext(); return Asignation_operator;
            }
          case 32: break;
          case 11: 
            { lexeme=yytext(); return Comparison_operator;
            }
          case 33: break;
          case 12: 
            { lexeme=yytext(); return Continue_sign;
            }
          case 34: break;
          case 13: 
            { lexeme=yytext(); return Scape_secuence;
            }
          case 35: break;
          case 14: 
            { lexeme=yytext(); return Reserve_word;
            }
          case 36: break;
          case 15: 
            { lexeme=yytext(); return Variable;
            }
          case 37: break;
          case 16: 
            { lexeme=yytext(); return String_value;
            }
          case 38: break;
          case 17: 
            { lexeme=yytext(); return Real_value;
            }
          case 39: break;
          case 18: 
            { lexeme=yytext(); return Boolean_value;
            }
          case 40: break;
          case 19: 
            { lexeme=yytext(); return Default_variables;
            }
          case 41: break;
          case 20: 
            { lexeme=yytext(); return Access_field;
            }
          case 42: break;
          case 21: 
            { lexeme=yytext(); return Function;
            }
          case 43: break;
          case 22: 
            { lexeme=yytext(); return Constants;
            }
          case 44: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
