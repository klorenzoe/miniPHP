/* The following code was generated by JFlex 1.6.1 */

package php_lexicalanalyzer;
import static php_lexicalanalyzer.Token.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>src/php_lexicalanalyzer/Rules.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\12\0\1\75\1\75\1\75\1\75\22\0\1\1\1\12\1\45\1\13"+
    "\1\41\1\14\1\15\1\43\1\16\1\17\1\23\1\35\1\37\1\34"+
    "\1\36\1\42\12\10\1\27\1\30\1\32\1\20\1\31\1\22\5\0"+
    "\1\52\20\0\1\74\4\0\1\24\1\2\1\25\1\0\1\26\1\0"+
    "\1\46\1\7\1\62\1\47\1\54\1\6\1\70\1\61\1\57\1\11"+
    "\1\63\1\55\1\65\1\3\1\50\1\64\1\71\1\4\1\56\1\5"+
    "\1\53\1\67\1\60\1\51\1\66\1\11\1\44\1\33\1\30\1\21"+
    "\6\0\1\75\33\0\1\21\6\0\1\21\3\0\1\21\3\0\1\21"+
    "\16\0\1\21\u1f58\0\1\72\1\73\16\0\1\75\1\75\udfd3\0\1\40"+
    "\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\22\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\1\5\3\1\4\1\3\1\5"+
    "\1\6\1\7\1\1\1\10\1\11\1\12\1\13\1\7"+
    "\1\1\1\14\2\13\1\1\1\7\2\1\1\7\2\1"+
    "\17\3\27\0\1\15\1\0\1\1\12\3\1\1\3\0"+
    "\1\1\2\0\1\1\1\5\1\16\4\0\1\17\1\0"+
    "\4\17\2\0\1\20\1\0\1\20\3\3\1\16\2\3"+
    "\1\5\27\3\12\0\1\16\35\0\10\3\1\16\3\3"+
    "\1\21\2\0\1\5\2\0\2\3\4\0\1\1\1\0"+
    "\2\17\1\0\11\17\1\0\37\3\6\0\1\16\45\0"+
    "\4\3\1\22\4\3\1\1\2\3\6\0\1\5\13\17"+
    "\1\6\13\3\1\16\16\3\24\0\1\16\16\0\4\3"+
    "\1\16\1\0\2\3\4\0\1\17\2\0\2\17\1\23"+
    "\6\17\24\3\4\0\1\16\24\0\4\3\1\5\2\0"+
    "\2\3\4\0\10\17\13\3\1\16\16\0\1\3\1\16"+
    "\3\3\1\0\1\24\5\17\1\16\1\0\3\3\1\16"+
    "\2\3\1\16\1\0\1\16\4\0\1\16\3\0\1\3"+
    "\1\16\1\0\1\3\1\0\4\17\2\0\1\16\2\3"+
    "\6\0\1\3\1\16\1\3\1\0\3\17\4\0\1\3"+
    "\5\0\1\3\1\25\1\0\1\3\1\0\3\17\7\0"+
    "\2\3\1\0\3\17\7\0\1\16\1\3\1\0\3\17"+
    "\10\0\1\26\1\16\2\0\1\3\1\0\2\17\14\0"+
    "\1\3\1\0\2\17\13\0\2\17\1\0\2\26\2\0"+
    "\2\17\3\0\2\17\3\0\2\17\11\0\1\25";

  private static int [] zzUnpackAction() {
    int [] result = new int[673];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\76\0\174\0\272\0\370\0\u0136\0\u0174\0\u01b2"+
    "\0\u01f0\0\u022e\0\u026c\0\u02aa\0\u02e8\0\76\0\u0326\0\76"+
    "\0\76\0\u0364\0\u03a2\0\u03e0\0\u041e\0\76\0\76\0\u045c"+
    "\0\u049a\0\u04d8\0\u0516\0\u0554\0\u0592\0\u05d0\0\u060e\0\u064c"+
    "\0\u068a\0\u06c8\0\u0706\0\u0744\0\u0782\0\u07c0\0\u07fe\0\u083c"+
    "\0\u087a\0\u08b8\0\u08f6\0\u0934\0\u0972\0\u09b0\0\u09ee\0\u0a2c"+
    "\0\u0a6a\0\u0aa8\0\u0ae6\0\u0b24\0\u03a2\0\u0b62\0\u0ba0\0\u0bde"+
    "\0\u0c1c\0\u0c5a\0\u0c98\0\u0cd6\0\u0d14\0\u0d52\0\u0d90\0\u0dce"+
    "\0\u0e0c\0\u0e4a\0\u0e88\0\u0ec6\0\u0f04\0\u0f42\0\u0f80\0\u0fbe"+
    "\0\u0ffc\0\u103a\0\u1078\0\u10b6\0\u10f4\0\u1132\0\u1170\0\u11ae"+
    "\0\u11ec\0\u122a\0\u1268\0\u12a6\0\u12e4\0\u1322\0\u1360\0\u139e"+
    "\0\u13dc\0\u141a\0\76\0\u1458\0\u1496\0\u14d4\0\u1512\0\u1550"+
    "\0\u158e\0\u15cc\0\u160a\0\u1648\0\u1686\0\u16c4\0\u1702\0\u05d0"+
    "\0\u05d0\0\u060e\0\u060e\0\u1740\0\u177e\0\u17bc\0\u17fa\0\u1838"+
    "\0\u1876\0\u026c\0\u18b4\0\u18f2\0\u1930\0\u196e\0\u19ac\0\u19ea"+
    "\0\u1a28\0\u1a66\0\u1aa4\0\u1ae2\0\u1b20\0\u1b5e\0\u1b9c\0\u1bda"+
    "\0\u1c18\0\u1c56\0\u1c94\0\u1cd2\0\u1d10\0\u1d4e\0\u1d8c\0\u1dca"+
    "\0\u1e08\0\u1e46\0\u1e84\0\u1ec2\0\u1f00\0\u1f3e\0\u1f7c\0\u1fba"+
    "\0\u1ff8\0\u2036\0\u2074\0\u20b2\0\u20f0\0\u212e\0\u216c\0\u21aa"+
    "\0\u21e8\0\u2226\0\u2264\0\u22a2\0\u22e0\0\u231e\0\u235c\0\u239a"+
    "\0\u23d8\0\u2416\0\u2454\0\u2492\0\u24d0\0\u250e\0\u254c\0\u258a"+
    "\0\u25c8\0\u2606\0\u2644\0\u2682\0\u26c0\0\u26fe\0\u273c\0\u277a"+
    "\0\u27b8\0\u27f6\0\u2834\0\u2872\0\u28b0\0\u28ee\0\u292c\0\u296a"+
    "\0\u29a8\0\u29e6\0\u2a24\0\u2a62\0\u2aa0\0\u2ade\0\u2ade\0\u2b1c"+
    "\0\u2b5a\0\u2b98\0\u2bd6\0\u2c14\0\u2c52\0\u2c90\0\u2cce\0\u2d0c"+
    "\0\u2d4a\0\u2d88\0\u2dc6\0\u2e04\0\u2e42\0\u2e80\0\u2ebe\0\u2efc"+
    "\0\u2f3a\0\u2f78\0\u2fb6\0\u2ff4\0\u3032\0\u3070\0\u30ae\0\u30ec"+
    "\0\u312a\0\u3168\0\u31a6\0\u31e4\0\u3222\0\u3260\0\u329e\0\u32dc"+
    "\0\u331a\0\u3358\0\u3396\0\u33d4\0\u3412\0\u3450\0\u348e\0\u34cc"+
    "\0\u350a\0\u3548\0\u3586\0\u35c4\0\u3602\0\u3640\0\u367e\0\u36bc"+
    "\0\u36fa\0\u3738\0\u3776\0\u37b4\0\u37f2\0\u3830\0\u386e\0\u38ac"+
    "\0\u38ea\0\u3928\0\u3966\0\u39a4\0\u39e2\0\u3a20\0\u3a5e\0\u3a9c"+
    "\0\u3ada\0\u3b18\0\u3b56\0\u3b94\0\u3bd2\0\u3c10\0\u3c4e\0\u3c8c"+
    "\0\u3cca\0\u3d08\0\u3d46\0\u3d84\0\u3dc2\0\u3e00\0\u3e3e\0\u3e7c"+
    "\0\u3eba\0\u3ef8\0\u3f36\0\u3f74\0\u3fb2\0\u3ff0\0\u402e\0\u406c"+
    "\0\u40aa\0\u40e8\0\u4126\0\u4164\0\u41a2\0\u41e0\0\u421e\0\u425c"+
    "\0\u429a\0\u42d8\0\u4316\0\u4354\0\u4392\0\u43d0\0\u440e\0\u026c"+
    "\0\u444c\0\u448a\0\u44c8\0\u4506\0\u4544\0\u4582\0\u45c0\0\u45fe"+
    "\0\u463c\0\u467a\0\u46b8\0\u46f6\0\u4734\0\u0fbe\0\u4772\0\u47b0"+
    "\0\u47ee\0\u482c\0\u486a\0\u48a8\0\u48e6\0\u4924\0\u4962\0\u49a0"+
    "\0\u49de\0\u1702\0\u4a1c\0\u4a5a\0\u4a98\0\u4ad6\0\u4b14\0\u4b52"+
    "\0\u4b90\0\u4bce\0\u4c0c\0\u4c4a\0\u4c88\0\u4cc6\0\u4d04\0\u4d42"+
    "\0\u4d80\0\u4dbe\0\u4dfc\0\u4e3a\0\u4e78\0\u4eb6\0\u4ef4\0\u4f32"+
    "\0\u4f70\0\u4fae\0\u4fec\0\u502a\0\u5068\0\u50a6\0\u50e4\0\u5122"+
    "\0\u5160\0\u519e\0\u51dc\0\u521a\0\u5258\0\u5296\0\u52d4\0\u5312"+
    "\0\u5350\0\u538e\0\u53cc\0\u540a\0\u5448\0\u5486\0\u54c4\0\u5502"+
    "\0\u5540\0\u557e\0\u55bc\0\u55fa\0\u5638\0\u5676\0\u56b4\0\u56f2"+
    "\0\u5730\0\u576e\0\u57ac\0\u57ea\0\u5828\0\u5866\0\u58a4\0\u58e2"+
    "\0\u5920\0\u595e\0\u599c\0\u59da\0\u5a18\0\u5a56\0\u5a94\0\u5ad2"+
    "\0\u5b10\0\u5b4e\0\u5b8c\0\u5bca\0\u5c08\0\u5c46\0\u5c84\0\u5cc2"+
    "\0\u158e\0\u5d00\0\u5d3e\0\u5d7c\0\u5dba\0\u5df8\0\u5e36\0\u5e74"+
    "\0\u5eb2\0\u5ef0\0\u5f2e\0\u5f6c\0\u5faa\0\u5fe8\0\u6026\0\u6064"+
    "\0\u60a2\0\u60e0\0\u611e\0\u615c\0\u619a\0\u61d8\0\u6216\0\u6254"+
    "\0\u6292\0\u62d0\0\u630e\0\u634c\0\u638a\0\u63c8\0\u6406\0\u6444"+
    "\0\u6482\0\u64c0\0\u64fe\0\u653c\0\u657a\0\u65b8\0\u65f6\0\u6634"+
    "\0\u6672\0\u66b0\0\u66ee\0\u672c\0\u676a\0\u67a8\0\u67e6\0\u6824"+
    "\0\u6862\0\u68a0\0\u68de\0\u691c\0\u695a\0\u6998\0\u69d6\0\u6a14"+
    "\0\u6a52\0\u6a90\0\u6ace\0\u6b0c\0\u6b4a\0\u6b88\0\u6bc6\0\u6c04"+
    "\0\u6c42\0\u6c80\0\u6cbe\0\u6cfc\0\u6d3a\0\u6d78\0\u6db6\0\u6df4"+
    "\0\u6e32\0\u6e70\0\u6eae\0\u6eec\0\u6f2a\0\u6f68\0\u6fa6\0\u6fe4"+
    "\0\u7022\0\u7060\0\u709e\0\u70dc\0\u711a\0\u7158\0\u7196\0\u71d4"+
    "\0\u7212\0\u7250\0\u728e\0\u72cc\0\u730a\0\u7348\0\u7386\0\u73c4"+
    "\0\u7402\0\u7440\0\u747e\0\u74bc\0\u74fa\0\u7538\0\u7576\0\u75b4"+
    "\0\u75f2\0\76\0\u7630\0\u766e\0\u76ac\0\u76ea\0\u7728\0\u7766"+
    "\0\u77a4\0\u77e2\0\u7820\0\u785e\0\u789c\0\u78da\0\u7918\0\u7956"+
    "\0\u7994\0\u79d2\0\u7a10\0\u7a4e\0\u7a8c\0\u7aca\0\u7b08\0\u7b46"+
    "\0\u7b84\0\u7bc2\0\u7c00\0\u7c3e\0\u7c7c\0\u7cba\0\u7cf8\0\u7d36"+
    "\0\u7d74\0\u7db2\0\u7df0\0\u7e2e\0\u7e6c\0\u7eaa\0\u7ee8\0\u7f26"+
    "\0\u7f64\0\u7fa2\0\u7fe0\0\u801e\0\u805c\0\u809a\0\u80d8\0\u8116"+
    "\0\u8154\0\u8192\0\u81d0\0\u820e\0\u824c\0\u828a\0\u82c8\0\u8306"+
    "\0\u8344\0\u8382\0\u83c0\0\u83fe\0\u843c\0\u847a\0\u84b8\0\u84f6"+
    "\0\u8534\0\u8572\0\u85b0\0\u85ee\0\u862c\0\u866a\0\u86a8\0\u86e6"+
    "\0\u8724\0\u8762\0\u87a0\0\u87de\0\u881c\0\u885a\0\u8898\0\u88d6"+
    "\0\u8914\0\u8952\0\u8990\0\u89ce\0\u8a0c\0\u8a4a\0\u8a88\0\u8ac6"+
    "\0\u8b04\0\u8b42\0\u8b80\0\u8bbe\0\u8bfc\0\u8c3a\0\u8c78\0\u8cb6"+
    "\0\u8cf4\0\u8d32\0\u8d70\0\u8dae\0\u8dec\0\u8e2a\0\u8e68\0\u8ea6"+
    "\0\u8ee4\0\76\0\u8f22\0\u8f60\0\u8f9e\0\u8fdc\0\u901a\0\u9058"+
    "\0\u9096\0\u90d4\0\u9112\0\u9150\0\u918e\0\u91cc\0\u920a\0\u9248"+
    "\0\u9286\0\u92c4\0\u9302\0\u9340\0\u937e\0\u93bc\0\u93fa\0\u9438"+
    "\0\u9476\0\u94b4\0\u94f2\0\u9530\0\u956e\0\u95ac\0\u95ea\0\u9628"+
    "\0\u9666\0\u96a4\0\u96e2\0\u9720\0\u975e\0\u979c\0\u97da\0\u8e68"+
    "\0\u8ea6\0\u9818\0\u9856\0\u9894\0\u98d2\0\u9910\0\u994e\0\u998c"+
    "\0\u99ca\0\u9a08\0\u9a46\0\u1458\0\u9a84\0\u9ac2\0\u9b00\0\u9b3e"+
    "\0\u9b7c\0\u9bba\0\u9bf8\0\u9c36\0\u9c74\0\u9cb2\0\u9cf0\0\u9d2e"+
    "\0\76";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[673];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\2\1\23\1\24\1\20\1\21\1\25\1\26"+
    "\1\21\1\27\1\30\1\31\1\32\1\16\1\33\1\26"+
    "\1\2\1\34\1\35\1\36\1\20\1\37\1\40\1\41"+
    "\1\42\1\43\1\2\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\13\1\52\1\13\1\53\1\13\1\54\1\55"+
    "\1\56\1\13\3\2\100\0\1\3\1\57\1\60\1\61"+
    "\1\62\1\63\1\64\12\0\1\65\3\0\1\66\3\0"+
    "\1\67\3\0\1\70\7\0\1\71\1\72\3\0\1\73"+
    "\1\74\1\75\1\76\1\77\1\100\1\0\1\101\1\0"+
    "\1\102\1\0\1\103\1\104\1\105\10\0\5\106\44\0"+
    "\1\107\24\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\1\111\3\13\1\0\1\13\1\112"+
    "\15\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\1\13\1\113\15\13"+
    "\7\0\1\13\1\114\5\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\6\13\1\115"+
    "\10\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\1\116\1\13\1\117\1\13\1\0"+
    "\1\120\3\13\1\121\12\13\7\0\1\13\1\122\5\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\5\123\1\12\1\123\14\0"+
    "\1\124\7\0\1\125\3\0\1\125\3\0\4\123\1\126"+
    "\17\123\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\17\13\7\0\5\127"+
    "\1\130\1\127\2\110\4\0\1\27\5\0\1\131\5\0"+
    "\1\110\4\0\1\132\4\0\4\127\1\0\17\127\5\0"+
    "\51\15\1\0\17\15\21\0\1\133\100\0\1\27\10\0"+
    "\1\27\75\0\1\134\67\0\1\16\55\0\5\13\1\0"+
    "\1\13\14\0\1\135\17\0\4\13\1\0\17\13\24\0"+
    "\1\27\1\0\1\136\106\0\1\133\45\0\5\123\1\12"+
    "\1\123\2\110\12\0\1\124\5\0\1\110\4\0\1\110"+
    "\4\0\4\123\1\0\17\123\5\0\1\137\62\0\1\140"+
    "\14\0\5\141\1\130\1\141\2\110\12\0\1\142\5\0"+
    "\1\110\4\0\1\110\4\0\1\143\3\141\1\0\6\141"+
    "\1\144\2\141\1\145\3\141\1\146\1\141\27\0\1\147"+
    "\16\0\1\15\34\0\42\150\1\151\6\150\1\0\17\150"+
    "\5\0\44\152\1\153\4\152\1\0\17\152\7\0\1\154"+
    "\1\155\2\13\1\156\2\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\3\13\1\157"+
    "\13\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\2\13\1\157\1\13\1\0\1\13"+
    "\1\160\2\13\1\161\12\13\7\0\1\13\1\162\5\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\2\13\1\42\1\13"+
    "\1\0\17\13\7\0\1\163\6\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\3\13"+
    "\1\164\13\13\7\0\1\165\6\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\3\13\1\166\1\0"+
    "\2\13\1\167\4\13\1\170\2\13\1\171\1\13\1\172"+
    "\2\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\4\13\1\173\12\13"+
    "\7\0\2\13\1\174\4\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\5\13\1\175"+
    "\11\13\7\0\1\176\2\13\1\157\3\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\3\13\1\163\6\13\1\177\4\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\6\13\1\200\10\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\1\201\1\13"+
    "\1\202\1\13\1\0\2\13\1\203\14\13\7\0\1\13"+
    "\1\204\5\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\1\205\16\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\4\13\1\206\12\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\1\207"+
    "\3\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\2\13\1\210\1\13"+
    "\1\0\2\13\1\211\14\13\60\0\1\107\67\0\1\212"+
    "\5\0\1\213\75\0\1\214\25\0\1\215\54\0\1\216"+
    "\64\0\1\217\2\0\1\220\3\0\1\221\22\0\1\222"+
    "\117\0\1\223\71\0\1\136\54\0\1\224\62\0\1\140"+
    "\15\0\1\225\2\0\1\226\46\0\1\134\67\0\1\134"+
    "\3\0\1\227\2\0\1\230\21\0\1\231\52\0\1\232"+
    "\22\0\1\233\45\0\1\234\3\0\1\235\4\0\1\236"+
    "\2\0\1\237\1\0\1\240\65\0\1\241\23\0\1\242"+
    "\52\0\1\243\20\0\1\244\2\0\1\134\47\0\1\231"+
    "\6\0\1\245\71\0\1\246\62\0\1\247\1\0\1\250"+
    "\4\0\1\251\24\0\1\252\46\0\1\253\101\0\1\254"+
    "\64\0\1\255\77\0\1\256\4\0\1\257\22\0\1\260"+
    "\144\0\1\261\27\0\5\123\1\130\1\123\2\110\12\0"+
    "\1\124\5\0\1\110\4\0\1\110\4\0\4\123\1\0"+
    "\17\123\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\12\13\1\262\4\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\5\13\1\157\11\13\7\0"+
    "\2\13\1\263\4\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\16\13\1\264\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\1\265\3\13\1\0\1\266\12\13\1\157\3\13"+
    "\7\0\1\13\1\267\5\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\4\13\1\270"+
    "\12\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\2\13\1\271\14\13"+
    "\7\0\1\13\1\272\5\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\17\13\7\0"+
    "\1\273\6\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\1\274\6\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\1\13"+
    "\1\275\15\13\7\0\7\123\2\110\12\0\1\123\5\0"+
    "\1\110\4\0\1\110\4\0\4\123\1\0\17\123\7\0"+
    "\5\123\1\0\1\123\14\0\1\124\17\0\4\123\1\0"+
    "\17\123\14\0\1\276\23\0\1\277\75\0\2\125\41\0"+
    "\1\300\1\0\7\127\2\110\2\0\1\133\7\0\1\127"+
    "\5\0\1\110\4\0\1\110\4\0\4\127\1\0\17\127"+
    "\7\0\5\123\1\130\1\123\14\0\1\124\17\0\4\123"+
    "\1\0\17\123\7\0\5\127\1\0\1\127\14\0\1\131"+
    "\17\0\4\127\1\0\17\127\7\0\5\301\1\130\1\301"+
    "\2\110\12\0\1\302\5\0\1\110\4\0\1\110\4\0"+
    "\4\301\1\0\17\301\5\0\1\134\77\0\5\13\1\0"+
    "\1\13\14\0\1\303\17\0\1\13\1\304\2\13\1\0"+
    "\6\13\1\305\10\13\70\0\1\306\60\0\1\307\107\0"+
    "\1\310\17\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\17\141\7\0\1\141\1\314\1\141\1\315\1\141\1\0"+
    "\1\141\14\0\1\316\17\0\4\141\1\0\1\141\1\317"+
    "\1\141\1\320\3\141\1\321\1\141\1\322\3\141\1\323"+
    "\1\141\7\0\1\141\1\324\5\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\17\141\7\0\2\141\1\325\4\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\17\141\7\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\6\141\1\326\10\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\2\141\1\327"+
    "\14\141\5\0\22\147\1\330\26\147\1\0\17\147\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\1\13\1\162\2\13\1\0\17\13\7\0\1\13"+
    "\1\331\5\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\3\13\1\332\13\13\5\0\1\134\1\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\3\13\1\333\3\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\7\13\1\334\7\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\1\13\1\335\15\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\3\13"+
    "\1\336\13\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\1\13\1\157"+
    "\15\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\1\13\1\337\2\13\1\0\17\13"+
    "\7\0\2\13\1\340\4\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\4\13\1\341"+
    "\2\13\1\342\7\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\3\13"+
    "\1\343\13\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\6\13\1\344"+
    "\10\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\11\13\1\345\5\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\1\346\3\13\1\0\17\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\3\13\1\341\13\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\1\347"+
    "\3\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\4\13"+
    "\1\350\12\13\7\0\2\13\1\351\4\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\3\13\1\352\3\13\1\353\7\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\11\13\1\354\5\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\4\13\1\355\12\13\7\0\2\13\1\356\4\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\2\13\1\357\1\164\13\13\7\0\1\360\6\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\1\361\1\13\1\362"+
    "\1\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\2\13\1\363\1\13"+
    "\1\0\4\13\1\364\12\13\7\0\4\13\1\365\2\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\1\13"+
    "\1\366\15\13\7\0\1\13\1\157\5\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\7\0\2\13\1\344\4\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\2\13\1\367\1\13\1\0\17\13\71\0"+
    "\1\370\70\0\1\134\22\0\1\371\63\0\1\372\52\0"+
    "\1\373\17\0\1\134\13\0\1\374\52\0\1\375\22\0"+
    "\1\376\74\0\1\377\75\0\1\u0100\146\0\1\u0101\70\0"+
    "\1\u0102\11\0\1\u0103\15\0\1\134\45\0\1\307\14\0"+
    "\1\140\15\0\1\u0104\147\0\1\u0105\25\0\1\u0106\53\0"+
    "\1\u0107\67\0\1\u0108\77\0\1\u0109\73\0\1\134\70\0"+
    "\1\u010a\33\0\1\u010b\51\0\1\u010c\2\0\1\u010d\71\0"+
    "\1\u010e\100\0\1\u010f\100\0\1\u0110\57\0\1\u0111\105\0"+
    "\1\u010c\65\0\1\u0112\106\0\1\u0113\23\0\1\u0114\50\0"+
    "\1\u0115\3\0\1\u0116\77\0\1\u0117\70\0\1\u0118\23\0"+
    "\1\u0119\47\0\1\u011a\1\232\22\0\1\u011b\140\0\1\u011c"+
    "\1\0\1\u011d\75\0\1\u011e\6\0\1\u011f\25\0\1\u0120"+
    "\142\0\1\u0121\25\0\1\134\76\0\1\u010f\140\0\1\u0122"+
    "\30\0\5\106\142\0\1\u0123\5\0\1\u010d\16\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\1\13\1\u0124\15\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\1\u0125\16\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\1\u0126"+
    "\16\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\4\13\1\u0127\12\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\1\13\1\u0128\15\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\2\13\1\112\1\13\1\0\17\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\3\13\1\157\13\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\3\13\1\266\13\13\5\0\1\134\1\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\1\13\1\u0129\15\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\7\13\1\u012a\7\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\1\u012b\3\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\1\u012c\3\13\1\0\17\13"+
    "\14\0\1\276\66\0\1\300\14\0\1\133\62\0\7\301"+
    "\2\110\12\0\1\301\5\0\1\u012d\4\0\1\110\4\0"+
    "\4\301\1\0\17\301\7\0\5\301\1\0\1\301\14\0"+
    "\1\302\17\0\4\301\1\0\17\301\7\0\5\13\1\0"+
    "\1\13\14\0\1\303\17\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\4\13\1\u012e\12\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\1\u012f\3\13\1\0\17\13\65\0\1\u0130\73\0\1\u0131"+
    "\102\0\1\u0132\51\0\1\u0133\31\0\1\u0134\6\0\5\123"+
    "\1\130\1\123\2\110\12\0\1\124\2\0\1\u0135\2\0"+
    "\1\u0136\4\0\1\110\4\0\4\123\1\0\17\123\41\0"+
    "\1\133\43\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\1\141\1\u0137\15\141\7\0\7\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\4\141\1\u0138\12\141\7\0\5\141\1\0"+
    "\1\141\14\0\1\316\17\0\4\141\1\0\17\141\7\0"+
    "\1\u0139\6\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\17\141"+
    "\7\0\7\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\1\141"+
    "\1\u013a\15\141\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\2\141"+
    "\1\u013b\1\141\1\0\17\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\2\141\1\u013c\1\141\1\0\17\141\7\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\4\141\1\0\1\141\1\u013d\15\141"+
    "\7\0\7\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\15\141"+
    "\1\u013e\1\141\7\0\2\141\1\u013f\4\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\17\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\11\141\1\u0140\5\141\7\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\2\141\1\u0141\1\141\1\0\17\141"+
    "\5\0\22\147\1\330\16\147\1\u0142\7\147\1\0\17\147"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\1\u0143\3\13\1\0\17\13\7\0\2\13"+
    "\1\u0144\4\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\1\u0145"+
    "\3\13\1\0\4\13\1\u0146\12\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\2\13\1\u0147\14\13\7\0\7\13\2\110\2\0"+
    "\1\134\7\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\1\13"+
    "\1\341\15\13\7\0\3\13\1\u0148\3\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\1\13\1\u0149"+
    "\2\13\1\0\3\13\1\u014a\1\u014b\1\51\11\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\1\13\1\u014c\15\13\7\0\2\13"+
    "\1\335\4\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\1\13\1\u014d\15\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\1\13\1\u014e\15\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\2\13\1\157\1\13"+
    "\1\0\17\13\7\0\2\13\1\u014f\4\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\2\13\1\335\14\13"+
    "\7\0\2\13\1\u0150\4\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\17\13\7\0"+
    "\2\13\1\356\4\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\17\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\1\13\1\u0151\15\13\7\0\2\13\1\u0152"+
    "\4\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\17\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\2\13\1\u0153\14\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\2\13"+
    "\1\u0154\14\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\2\13\1\164"+
    "\14\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\7\13\1\u0155\7\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\2\13\1\u0156\14\13\7\0"+
    "\2\13\1\u0157\4\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\3\13\1\u0127\13\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\3\13\1\270\13\13\7\0"+
    "\1\164\6\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\2\13\1\u0158"+
    "\4\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\17\13\7\0\1\u0127\6\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\14\13\1\u0159\2\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\2\13\1\u015a\14\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\2\13"+
    "\1\u015b\14\13\7\0\4\13\1\u015c\2\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\60\0\1\u015d\74\0\1\u015e\75\0\1\u015f\101\0"+
    "\1\u0160\66\0\1\213\103\0\1\134\20\0\1\134\52\0"+
    "\1\u0161\103\0\1\u0162\61\0\1\u0163\75\0\1\u0164\106\0"+
    "\1\u0165\64\0\1\u0166\75\0\1\u0167\34\0\1\u0168\136\0"+
    "\1\u0169\104\0\1\u016a\36\0\1\134\133\0\1\u010c\27\0"+
    "\1\u016b\40\0\1\u016c\6\0\1\u016d\1\u016e\1\100\71\0"+
    "\1\u016f\26\0\1\u0108\144\0\1\u0170\75\0\1\u0171\71\0"+
    "\1\134\32\0\1\u0172\145\0\1\u0108\25\0\1\u0173\75\0"+
    "\1\u0119\144\0\1\u0174\26\0\1\u0175\145\0\1\u0176\75\0"+
    "\1\u0177\75\0\1\232\102\0\1\u0178\70\0\1\u0179\25\0"+
    "\1\u017a\50\0\1\u0160\75\0\1\375\22\0\1\232\77\0"+
    "\1\u017b\73\0\1\u0160\63\0\1\u017c\63\0\1\u0173\75\0"+
    "\1\u017d\27\0\1\u017e\150\0\1\u017f\16\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\3\13\1\u0180\13\13\7\0\1\13\1\u0181\5\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\4\13"+
    "\1\u0182\12\13\7\0\2\13\1\157\4\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\1\356\3\13\1\0\17\13\7\0"+
    "\2\13\1\u0183\4\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\17\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\2\13\1\u0184\14\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\10\13\1\157\6\13\7\0\5\123\1\130\1\123"+
    "\2\110\12\0\1\124\2\0\1\u0185\2\0\1\110\4\0"+
    "\1\110\4\0\4\123\1\0\17\123\7\0\1\13\1\u0186"+
    "\5\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\17\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\2\13\1\u0187\14\13\70\0\1\134\15\0\1\u0188\117\0"+
    "\1\u0189\52\0\5\u018a\1\0\1\u018a\14\0\1\u0133\17\0"+
    "\4\u018a\1\0\17\u018a\7\0\5\u018b\1\0\1\u018b\14\0"+
    "\1\u0134\17\0\4\u018b\1\0\17\u018b\7\0\5\u018c\1\0"+
    "\1\u018c\14\0\1\u018d\5\0\1\u018e\11\0\4\u018c\1\0"+
    "\17\u018c\7\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\16\141\1\u018f\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\2\141\1\u0190\14\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\14\141\1\u0191\2\141\7\0\1\141"+
    "\1\u0192\5\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\3\141"+
    "\1\u0193\13\141\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\2\141"+
    "\1\u0194\1\141\1\0\17\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\3\141\1\u013d\13\141\7\0\2\141"+
    "\1\u0191\4\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\17\141"+
    "\7\0\7\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\7\141"+
    "\1\u0191\4\141\1\u0191\2\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\11\141\1\u0195\5\141\7\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\u0196\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\4\141\1\0\17\141\7\0\4\141"+
    "\1\u0197\2\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\17\141"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\13\13\1\u0198\3\13\7\0"+
    "\1\13\1\u0199\5\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\17\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\1\u019a\16\13\7\0\1\u019b\6\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\1\u019c\3\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\2\13\1\117\1\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\1\13\1\u019d\15\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\5\13\1\175\11\13\7\0\3\13\1\157"+
    "\3\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\17\13\7\0\1\u019e\6\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\11\13\1\u019f"+
    "\5\13\5\0\1\134\1\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\4\13"+
    "\1\u014b\12\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\13\13\1\335"+
    "\3\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\4\13\1\u01a0\12\13"+
    "\7\0\1\13\1\u01a1\5\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\1\u01a2\3\13\1\0\1\13\1\u01a3\15\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\1\u01a4\16\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\1\13\1\u01a5\15\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\6\13\1\157\10\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\1\u01a6\3\13\1\0"+
    "\17\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\4\13\1\u01a7\12\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\1\13\1\u01a8\15\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\1\u01a9\3\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\4\13\1\u01aa\12\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\1\13\1\157"+
    "\2\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\1\u01ab\3\13\1\0"+
    "\17\13\62\0\1\u01ac\23\0\1\u01ad\150\0\1\u01ae\23\0"+
    "\1\134\136\0\1\u0119\34\0\1\u01af\145\0\1\u01b0\103\0"+
    "\1\134\16\0\1\u01b1\146\0\1\u01b2\106\0\1\u01b3\13\0"+
    "\1\u01b4\144\0\1\u01b5\70\0\1\u01b6\77\0\1\217\101\0"+
    "\1\u01b7\101\0\1\243\23\0\1\134\72\0\1\u01b8\156\0"+
    "\1\u0162\12\0\1\134\55\0\1\u016e\104\0\1\u0108\66\0"+
    "\1\u01b9\22\0\1\u01ba\137\0\1\u01bb\5\0\1\u01bc\74\0"+
    "\1\u01bd\76\0\1\u01be\102\0\1\134\62\0\1\u01bf\106\0"+
    "\1\u01c0\72\0\1\u01c1\67\0\1\u01c2\76\0\1\134\74\0"+
    "\1\u01c3\55\0\1\u01c4\52\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\11\13"+
    "\1\u01c5\5\13\7\0\1\157\6\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\1\13\1\u01c6\5\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\4\13\1\u01c7\12\13\5\0\1\134"+
    "\1\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\2\13\1\u01c8\14\13\7\0"+
    "\5\u01c9\1\0\1\u01c9\14\0\1\u01ca\5\0\1\u01cb\11\0"+
    "\4\u01c9\1\0\17\u01c9\7\0\7\13\2\110\12\0\1\u01cc"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\2\13\1\u01cd\4\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\17\13\60\0"+
    "\1\u01ce\75\0\1\u01cf\24\0\7\u018a\14\0\1\u018a\11\0"+
    "\1\u01d0\5\0\4\u018a\1\0\17\u018a\7\0\7\u018b\14\0"+
    "\1\u018b\17\0\4\u018b\1\0\17\u018b\1\0\1\u01d0\5\0"+
    "\7\u018c\12\0\1\311\1\0\1\u018c\5\0\1\u01d1\1\313"+
    "\10\0\4\u018c\1\0\17\u018c\7\0\5\u018c\1\0\1\u018c"+
    "\14\0\1\u018d\17\0\4\u018c\1\0\17\u018c\35\0\1\u0135"+
    "\47\0\7\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\1\u01d2"+
    "\16\141\7\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\1\141\1\u01d3\15\141\7\0\7\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\14\141\1\u01d4\2\141\7\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\3\141\1\u01d5\13\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\10\141\1\u01d6"+
    "\6\141\7\0\7\141\2\110\10\0\1\311\1\0\1\u01d7"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\17\141\7\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\1\141\1\u01d8\15\141\7\0\7\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\1\u01d9\3\141\1\0\17\141\5\0\1\u01b3\1\0\7\13"+
    "\2\110\2\0\1\134\7\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\1\u01da"+
    "\3\13\1\0\17\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\2\13"+
    "\1\u01db\14\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\1\13\1\u01dc"+
    "\15\13\7\0\1\13\1\164\5\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\7\13\1\334\7\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\1\13\1\270\2\13\1\0\17\13\7\0\2\13"+
    "\1\u01dd\4\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\7\13\1\157\7\13\7\0\3\13\1\u01c5\3\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\1\u01de\6\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\1\u01df\3\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\1\13\1\u01e0\2\13\1\0\17\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\12\13\1\u01e1\4\13\7\0\4\13\1\355"+
    "\2\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\17\13\7\0\1\u01e2\6\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\7\13\1\u01e3"+
    "\7\13\7\0\2\13\1\u01e4\4\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\7\13\1\u01e5\7\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\2\13\1\157\14\13\70\0\1\u01e6"+
    "\14\0\1\134\76\0\1\u01e7\150\0\1\u01e8\17\0\1\134"+
    "\53\0\1\u01e9\46\0\1\u01ea\54\0\1\u01eb\71\0\1\u01b3"+
    "\14\0\1\134\125\0\1\u01ec\104\0\1\u0160\24\0\1\232"+
    "\153\0\1\u0107\62\0\1\375\110\0\1\134\21\0\1\u01e6"+
    "\72\0\1\u01ed\140\0\1\u01ee\76\0\1\u01ef\113\0\1\u01f0"+
    "\17\0\1\u0118\71\0\1\u01f1\154\0\1\u01f2\20\0\1\232"+
    "\145\0\1\134\76\0\1\u01f3\22\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\1\u01f4\3\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\1\13\1\u01f5"+
    "\15\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\2\13\1\u01f6\1\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\13\13\1\157\3\13\7\0"+
    "\7\u01c9\14\0\1\u01c9\17\0\4\u01c9\1\0\17\u01c9\7\0"+
    "\5\u01c9\1\0\1\u01c9\14\0\1\u01ca\17\0\4\u01c9\1\0"+
    "\17\u01c9\35\0\1\u0185\47\0\7\13\2\110\12\0\1\u01f7"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\u01f8\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\66\0\1\u01f9\63\0"+
    "\1\u01c3\52\0\1\u01fa\104\0\1\133\44\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\1\141\1\u013c\15\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\3\141\1\u0191"+
    "\13\141\7\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\1\141\1\u01fb\15\141\7\0\7\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\4\141\1\u01fc\12\141\7\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\4\141\1\u01fd\12\141\7\0"+
    "\1\141\1\u01fe\5\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\17\141\7\0\1\141\1\u01ff\5\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\17\141\7\0\7\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\2\141\1\u01d3\14\141\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\7\13\1\u0127\7\13\7\0\2\13\1\u0200\4\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\7\0\7\13\2\110\2\0\1\u0201"+
    "\7\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\4\13\1\u0202"+
    "\12\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\7\13\1\u0203\7\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\1\13\1\u0204\2\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\1\13\1\u0205\15\13\7\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\1\13\1\u0206\15\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\1\164\16\13\7\0\2\13\1\u0207\4\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\1\13\1\u01e5"+
    "\15\13\5\0\1\u0208\1\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\52\0\1\u0209\103\0\1\u020a\71\0\1\u01ad\113\0\1\134"+
    "\35\0\1\u020b\75\0\1\u020c\131\0\1\u0160\75\0\1\u020d"+
    "\62\0\1\u020e\102\0\1\u020f\75\0\1\u0210\74\0\1\232"+
    "\27\0\1\u0211\147\0\1\u0212\21\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\7\13\1\164\7\13\5\0\1\134\1\0\7\13\2\110"+
    "\12\0\1\u0213\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\1\u0214\6\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\5\0\1\u0215\1\0\7\13\2\110\12\0\1\13\5\0"+
    "\1\110\4\0\1\110\4\0\4\13\1\0\17\13\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\7\13\1\u0216\7\13\11\0\1\u0217"+
    "\73\0\1\141\1\u0191\5\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\17\141\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\2\141"+
    "\1\u0218\1\141\1\0\17\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\1\141\1\u0191\15\141\7\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\1\u0219\3\141\1\0\1\141\1\u021a"+
    "\15\141\7\0\1\141\1\u021b\5\141\2\110\10\0\1\311"+
    "\1\0\1\141\5\0\1\312\1\313\3\0\1\110\4\0"+
    "\4\141\1\0\17\141\5\0\1\134\1\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\2\0\1\u021c\44\0\1\u021d\35\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\2\13\1\u0181\1\13\1\0\17\13\7\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\1\13\1\u0204\15\13\7\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\2\13\1\u014b"+
    "\1\13\1\0\17\13\5\0\1\u021e\1\0\7\13\2\110"+
    "\12\0\1\u021f\5\0\1\110\4\0\1\110\4\0\4\13"+
    "\1\0\17\13\7\0\1\u0220\6\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\17\13"+
    "\7\0\7\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\1\13\1\u015b\15\13\5\0"+
    "\1\134\60\0\1\u0221\75\0\1\232\14\0\1\134\24\0"+
    "\1\u0222\50\0\1\u0215\156\0\1\u0223\67\0\1\u020e\71\0"+
    "\1\u016e\26\0\1\u021e\24\0\1\u0224\52\0\1\u0225\146\0"+
    "\1\u017d\24\0\1\u0226\75\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\2\13\1\u0227\1\13"+
    "\1\0\17\13\5\0\1\u0228\1\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\42\0\1\134\42\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\2\13\1\u0229\1\13"+
    "\1\0\17\13\54\0\1\u022a\30\0\1\u0191\6\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\17\141\7\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\141\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\5\141\1\u022b\11\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\3\141\1\u022c"+
    "\13\141\7\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\2\141\1\u022d"+
    "\1\141\1\0\17\141\52\0\1\u022e\30\0\1\u021d\1\0"+
    "\5\u022f\1\0\1\u022f\14\0\1\u0230\17\0\4\u022f\1\0"+
    "\17\u022f\5\0\1\134\24\0\1\u0231\52\0\7\13\2\110"+
    "\12\0\1\13\5\0\1\110\4\0\1\110\4\0\2\13"+
    "\1\u0232\1\13\1\0\17\13\7\0\2\13\1\270\4\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\54\0\1\u0233\75\0\1\u0234\75\0"+
    "\1\u0235\75\0\1\u0236\32\0\1\375\160\0\1\u0237\10\0"+
    "\1\u0238\6\13\2\110\12\0\1\13\5\0\1\110\4\0"+
    "\1\110\4\0\4\13\1\0\17\13\5\0\1\134\1\0"+
    "\5\u0239\1\0\1\u0239\14\0\1\u023a\17\0\4\u0239\1\0"+
    "\17\u0239\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\12\13\1\u023b\4\13"+
    "\10\0\1\u023c\74\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\u023d\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\17\141\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\11\141\1\u023e\5\141\7\0\1\141\1\u023f\5\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\4\141\1\0\17\141\10\0\1\u0240"+
    "\74\0\7\u022f\14\0\1\u022f\14\0\1\u0241\2\0\4\u022f"+
    "\1\0\17\u022f\7\0\5\u022f\1\0\1\u022f\14\0\1\u0230"+
    "\17\0\4\u022f\1\0\17\u022f\32\0\1\u0242\52\0\1\u01f4"+
    "\6\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\17\13\7\0\1\u0243\75\0\1\u0244"+
    "\157\0\1\u0245\13\0\1\u0209\147\0\1\u0246\23\0\7\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\7\13\1\u0247\7\13\7\0\7\u0239\14\0"+
    "\1\u0239\17\0\4\u0239\1\0\17\u0239\7\0\5\u0239\1\0"+
    "\1\u0239\14\0\1\u023a\17\0\4\u0239\1\0\17\u0239\7\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\11\13\1\u0248\5\13\72\0\1\u0249"+
    "\12\0\7\141\2\110\10\0\1\311\1\0\1\141\5\0"+
    "\1\312\1\313\3\0\1\110\4\0\4\141\1\0\11\141"+
    "\1\u024a\5\141\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\2\141"+
    "\1\u024b\1\141\1\0\17\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\12\141\1\u024c\4\141\63\0\1\u024d"+
    "\55\0\1\u024e\105\0\1\u024f\104\0\1\u0250\101\0\1\u0251"+
    "\77\0\1\u0252\65\0\1\u0253\24\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\1\13\1\u0254\15\13\7\0\7\13\2\110\12\0\1\13"+
    "\5\0\1\110\4\0\1\110\4\0\4\13\1\0\4\13"+
    "\1\u0255\12\13\32\0\1\u0256\52\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\2\141\1\u0257\1\141\1\0\17\141\7\0\1\u0258"+
    "\6\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\17\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\3\141\1\u0259"+
    "\13\141\52\0\1\u025a\30\0\1\u024e\3\0\1\u025b\1\u025c"+
    "\1\0\1\u025d\23\0\1\u025e\6\0\1\u025f\1\0\1\u0260"+
    "\107\0\1\u0261\23\0\1\u0262\144\0\1\u0263\100\0\1\u0264"+
    "\44\0\1\u0265\50\0\1\u021e\1\0\7\13\2\110\12\0"+
    "\1\13\5\0\1\110\4\0\1\110\4\0\4\13\1\0"+
    "\17\13\7\0\7\13\2\110\12\0\1\13\5\0\1\110"+
    "\4\0\1\110\4\0\4\13\1\0\2\13\1\u0266\14\13"+
    "\62\0\1\u0267\22\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\3\141\1\u0268\13\141\7\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\4\141\1\0\3\141\1\u0269\13\141\7\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\4\141\1\0\15\141\1\u0191\1\141"+
    "\13\0\1\u026a\72\0\1\u026b\137\0\1\u026c\30\0\1\u026d"+
    "\6\0\1\u025d\25\0\1\u026e\3\0\1\u026e\1\u026f\6\0"+
    "\1\u0270\33\0\1\u025d\66\0\42\u025f\1\u0271\6\u025f\1\0"+
    "\17\u025f\5\0\44\u0260\1\u0272\4\u0260\1\0\17\u0260\10\0"+
    "\1\u0273\72\0\1\u021e\151\0\1\u0274\75\0\1\u0275\23\0"+
    "\7\13\2\110\12\0\1\13\5\0\1\110\4\0\1\110"+
    "\4\0\4\13\1\0\1\13\1\u0276\15\13\60\0\1\u0277"+
    "\24\0\2\141\1\u0278\4\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\17\141\7\0\7\141\2\110\10\0\1\311\1\0"+
    "\1\141\5\0\1\312\1\313\3\0\1\110\4\0\4\141"+
    "\1\0\1\141\1\u0279\15\141\61\0\1\u027a\73\0\1\u027b"+
    "\77\0\1\u027c\21\0\1\u026d\41\0\1\u026f\42\0\1\u027d"+
    "\23\0\1\u027e\60\0\1\u0262\112\0\2\u026e\41\0\1\u0271"+
    "\41\u025f\1\u027f\6\u025f\1\0\17\u025f\5\0\1\u0272\41\u0260"+
    "\1\u0280\1\u0260\1\u0272\4\u0260\1\0\17\u0260\32\0\1\u0281"+
    "\123\0\1\u0282\71\0\1\u0283\30\0\1\13\1\335\5\13"+
    "\2\110\12\0\1\13\5\0\1\110\4\0\1\110\4\0"+
    "\4\13\1\0\17\13\70\0\1\u0284\14\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\u0285\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\17\141\7\0\7\141\2\110"+
    "\10\0\1\311\1\0\1\u0286\5\0\1\312\1\313\3\0"+
    "\1\110\4\0\4\141\1\0\17\141\60\0\1\u0287\75\0"+
    "\1\u026d\77\0\1\u027b\20\0\1\u026d\6\0\1\u027d\32\0"+
    "\1\u026f\42\0\1\u027d\66\0\1\u0271\15\u025f\1\u0288\23\u025f"+
    "\1\u027f\6\u025f\1\0\17\u025f\5\0\16\u0260\1\u0289\25\u0260"+
    "\1\u0272\4\u0260\1\0\17\u0260\32\0\1\u028a\53\0\1\u0108"+
    "\161\0\1\134\53\0\1\u028b\32\0\7\141\2\110\10\0"+
    "\1\311\1\0\1\141\5\0\1\312\1\313\3\0\1\110"+
    "\4\0\1\141\1\u028c\2\141\1\0\17\141\7\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\4\141\1\0\6\141\1\u028d\10\141"+
    "\62\0\1\u028e\20\0\1\u028f\100\0\1\u0290\74\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\1\u0291\3\141\1\0\17\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\4\141\1\0\1\141\1\u0292"+
    "\15\141\24\0\1\u0293\113\0\1\u0294\105\0\1\u0295\32\0"+
    "\2\141\1\u0296\4\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\4\141\1\0"+
    "\17\141\7\0\7\141\2\110\10\0\1\311\1\0\1\141"+
    "\5\0\1\312\1\313\3\0\1\110\4\0\1\u0297\3\141"+
    "\1\0\17\141\45\0\1\u0298\41\0\1\u0299\73\0\7\141"+
    "\2\110\10\0\1\311\1\0\1\141\5\0\1\312\1\313"+
    "\3\0\1\110\4\0\1\u0191\3\141\1\0\17\141\7\0"+
    "\7\141\2\110\10\0\1\311\1\0\1\141\5\0\1\312"+
    "\1\313\3\0\1\110\4\0\1\141\1\u01d4\2\141\1\0"+
    "\17\141\74\0\1\u029a\55\0\1\u029b\102\0\1\u029c\24\0"+
    "\1\u020b\141\0\1\u029d\34\0\1\u029e\134\0\1\u029f\104\0"+
    "\1\u02a0\76\0\1\u02a1\17\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[40300];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\13\1\1\11\1\1\2\11\4\1\2\11"+
    "\27\1\27\0\1\1\1\0\14\1\3\0\1\1\2\0"+
    "\1\1\1\11\1\1\4\0\1\1\1\0\4\1\2\0"+
    "\1\1\1\0\37\1\12\0\1\1\35\0\15\1\2\0"+
    "\1\1\2\0\2\1\4\0\1\1\1\0\2\1\1\0"+
    "\11\1\1\0\37\1\6\0\1\1\45\0\14\1\6\0"+
    "\47\1\24\0\1\1\16\0\5\1\1\0\2\1\4\0"+
    "\1\1\2\0\35\1\4\0\1\1\24\0\5\1\2\0"+
    "\2\1\4\0\24\1\16\0\5\1\1\0\1\11\6\1"+
    "\1\0\7\1\1\0\1\1\4\0\1\1\3\0\2\1"+
    "\1\0\1\1\1\0\4\1\2\0\3\1\6\0\3\1"+
    "\1\0\3\1\4\0\1\1\5\0\2\1\1\0\1\1"+
    "\1\0\3\1\7\0\2\1\1\0\3\1\7\0\2\1"+
    "\1\0\3\1\10\0\1\11\1\1\2\0\1\1\1\0"+
    "\2\1\14\0\1\1\1\0\2\1\13\0\2\1\1\0"+
    "\2\1\2\0\2\1\3\0\2\1\3\0\2\1\11\0"+
    "\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[673];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
   public String lexeme ="";


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 214) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme=yytext(); return Error;
            }
          case 23: break;
          case 2: 
            { /*ignore*/
            }
          case 24: break;
          case 3: 
            { lexeme=yytext(); return Identifier;
            }
          case 25: break;
          case 4: 
            { lexeme=yytext(); return Int_value;
            }
          case 26: break;
          case 5: 
            { lexeme=yytext(); return Logical_operator;
            }
          case 27: break;
          case 6: 
            { lexeme=yytext(); return Comments;
            }
          case 28: break;
          case 7: 
            { lexeme=yytext(); return Arithmetic_operator;
            }
          case 29: break;
          case 8: 
            { lexeme=yytext(); return Opening;
            }
          case 30: break;
          case 9: 
            { lexeme=yytext(); return Closing;
            }
          case 31: break;
          case 10: 
            { lexeme=yytext(); return Asignation_operator;
            }
          case 32: break;
          case 11: 
            { lexeme=yytext(); return Comparison_operator;
            }
          case 33: break;
          case 12: 
            { lexeme=yytext(); return Continue_sign;
            }
          case 34: break;
          case 13: 
            { lexeme=yytext(); return Scape_secuence;
            }
          case 35: break;
          case 14: 
            { lexeme=yytext(); return Reserve_word;
            }
          case 36: break;
          case 15: 
            { lexeme=yytext(); return Variable;
            }
          case 37: break;
          case 16: 
            { lexeme=yytext(); return String_value;
            }
          case 38: break;
          case 17: 
            { lexeme=yytext(); return Real_value;
            }
          case 39: break;
          case 18: 
            { lexeme=yytext(); return Boolean_value;
            }
          case 40: break;
          case 19: 
            { lexeme=yytext(); return Default_variables;
            }
          case 41: break;
          case 20: 
            { lexeme=yytext(); return Access_field;
            }
          case 42: break;
          case 21: 
            { lexeme=yytext(); return Function;
            }
          case 43: break;
          case 22: 
            { lexeme=yytext(); return Constants;
            }
          case 44: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
